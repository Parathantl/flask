[
    {
        "question": "What is shared hosting?",
        "answers": [
            "Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is virtual private server?",
        "answers": [
            " A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "its product documentation (now to be found on Microsoft Docs).\n\nGitHub also operates a pastebin-style site called Gist, which is for code snippets, as opposed to GitHub proper, which is for larger projects. Tom Preston-Werner débuted the feature at a Ruby conference in 2008. Gist builds on the traditional simple concept of a pastebin by adding version control for code snippets, easy forking, and TLS encryption for private pastes. Because each \"gist\" is its own Git repository, multiple code snippets can be contained in a single page and they can be pushed and pulled using Git.\n\nGitHub launched a new program called",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is server-less computing?",
        "answers": [
            "In this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is cloud computing?",
        "answers": [
            "Cloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you.."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is scalability?",
        "answers": [
            "The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is GPU?",
        "answers": [
            "Graphical Processing Unit"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is vertical scaling?",
        "answers": [
            "scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is horizontal scaling?",
        "answers": [
            "scaling by adding more machines that can serve customer requests (also described as “scaling out”)"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the factors to be considered before scaling up or scaling down?",
        "answers": [
            " These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system can tradeoff between latency ('L') and consistency ('C').\n\nThe first part of the theorem (PAC) is the same as the CAP theorem, and the ELC is the extension.\n\nExample Systems\nDynamo and Cassandra are PA/EL systems: They choose availability over consistency when a partition occurs; otherwise, they choose better latency.\nBigTable and HBase are PC/EC systems: They will always choose consistency, giving up availability and lower latency.\nMongoDB can be considered PA/EC: MongoDB works in a primary/secondaries configuration. In the default configuration, all writes and reads are performed on the primary. As all replication is done asynchronously (from primary to secondaries), when there",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is deadlock?",
        "answers": [
            "deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise, the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be able to have a resource for a certain amount of time, or the processing outcome may be inconsistent or thrashing may occur. However, the inability to enforce preemption may interfere with a priority algorithm. Preemption of a \"locked out\" resource generally implies a rollback, and is to be avoided since it is very costly in overhead. Algorithms that allow preemption include lock-free and wait-free algorithms and optimistic concurrency control. If a process holding some resources and requests for some another resource(s) that cannot be immediately allocated to it, the condition may be removed by releasing all the currently being held resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the necessary conditions for deadlock?",
        "answers": [
            "Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise, the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be able to have a resource for a certain amount of time, or the processing outcome may be inconsistent or thrashing may occur. However, the inability to enforce preemption may interfere with a priority algorithm. Preemption of a \"locked out\" resource generally implies a rollback, and is to be avoided since it is very costly in overhead. Algorithms that allow preemption include lock-free and wait-free algorithms and optimistic concurrency control. If a process holding some resources and requests for some another resource(s) that cannot be immediately allocated to it, the condition may be removed by releasing all the currently being held resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the methods used to correct the deadlock?",
        "answers": [
            "Process termination, Resource preemption"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise, the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be able to have a resource for a certain amount of time, or the processing outcome may be inconsistent or thrashing may occur. However, the inability to enforce preemption may interfere with a priority algorithm. Preemption of a \"locked out\" resource generally implies a rollback, and is to be avoided since it is very costly in overhead. Algorithms that allow preemption include lock-free and wait-free algorithms and optimistic concurrency control. If a process holding some resources and requests for some another resource(s) that cannot be immediately allocated to it, the condition may be removed by releasing all the currently being held resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "possible, therefore instead of instructions, declarative and executable definitions of the whole system are written in the form of the code (often in .yaml or .tf format). If this description would not be correct, the system would not work, because the code is tested and executed at every change.\n\nPull Requests + Review for Changes to the Infrastructure\nBecause the infrastructure is now managed in Git just like any software project, the same proven concepts for quality assurance and control are applied. When there is a request for a change to the infrastructure, a “Pull Request” is created which is first subject",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is livelock?",
        "answers": [
            "A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock.[1] Deadlocks are a common problem in multiprocessing systems, parallel computing, and distributed systems, because in these contexts systems often use software or hardware locks to arbitrate shared resources and implement process synchronization.[2]\n\nIn an operating system, a deadlock occurs when a process or thread enters a waiting state because a requested system resource is held by another waiting process, which in turn is waiting for another resource held by another waiting process.[3] If a process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise, the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be able to have a resource for a certain amount of time, or the processing outcome may be inconsistent or thrashing may occur. However, the inability to enforce preemption may interfere with a priority algorithm. Preemption of a \"locked out\" resource generally implies a rollback, and is to be avoided since it is very costly in overhead. Algorithms that allow preemption include lock-free and wait-free algorithms and optimistic concurrency control. If a process holding some resources and requests for some another resource(s) that cannot be immediately allocated to it, the condition may be removed by releasing all the currently being held resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is decorator design pattern?",
        "answers": [
            "structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "chain of responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\n\ndecorator design pattern is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is chain of responsibility?",
        "answers": [
            "a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "chain of responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\n\ndecorator design pattern is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is mean by open-source databases?",
        "answers": [
            "Open-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the type of database systems?",
        "answers": [
            "Centralized, Distributed, Federated"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system can tradeoff between latency ('L') and consistency ('C').\n\nThe first part of the theorem (PAC) is the same as the CAP theorem, and the ELC is the extension.\n\nExample Systems\nDynamo and Cassandra are PA/EL systems: They choose availability over consistency when a partition occurs; otherwise, they choose better latency.\nBigTable and HBase are PC/EC systems: They will always choose consistency, giving up availability and lower latency.\nMongoDB can be considered PA/EC: MongoDB works in a primary/secondaries configuration. In the default configuration, all writes and reads are performed on the primary. As all replication is done asynchronously (from primary to secondaries), when there",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the future database trends?",
        "answers": [
            "Cloud migration, Increased data security, Open-source cloud, Graph in popular demand"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a database?",
        "answers": [
            "A database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the database types?",
        "answers": [
            "Relational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is database as a service?",
        "answers": [
            "Databases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is github?",
        "answers": [
            "provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories). It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of its product documentation (now to be found on Microsoft Docs).\n\nGitHub also operates a pastebin-style site called Gist, which is for code snippets, as opposed to GitHub proper, which is for larger projects. Tom Preston-Werner débuted the feature at a Ruby conference in 2008. Gist builds on the traditional simple concept of a pastebin by adding version control for code snippets, easy forking, and TLS encryption for private pastes. Because each \"gist\" is its own Git repository, multiple code snippets can be contained in a single page and they can be pushed and pulled using Git.\n\nGitHub launched a new program called the GitHub Student Developer Pack to give students free access to popular development tools and services. GitHub partnered with Bitnami, Crowdflower, DigitalOcean, DNSimple, HackHands, Namecheap, Orchestrate, Screenhero, SendGrid, Stripe, Travis CI, and Unreal Engine to launch the program. In 2016 GitHub announced the launch of the GitHub Campus Experts program to train and encourage students to grow technology communities at their universities. The Campus Experts program is open to university students 18 years and older across the world. GitHub Campus Experts are one of the primary ways that GitHub funds student-oriented events and communities, Campus Experts are given access to training, funding, and additional resources to run events and grow their communities. To become a Campus Expert applicants must complete an online training course consisting of multiple modules designed to grow community leadership skills. \n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "the GitHub Student Developer Pack to give students free access to popular development tools and services. GitHub partnered with Bitnami, Crowdflower, DigitalOcean, DNSimple, HackHands, Namecheap, Orchestrate, Screenhero, SendGrid, Stripe, Travis CI, and Unreal Engine to launch the program. In 2016 GitHub announced the launch of the GitHub Campus Experts program to train and encourage students to grow technology communities at their universities. The Campus Experts program is open to university students 18 years and older across the world. GitHub Campus Experts are one of the primary ways that GitHub funds student-oriented events and communities, Campus Experts are given access to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "its product documentation (now to be found on Microsoft Docs).\n\nGitHub also operates a pastebin-style site called Gist, which is for code snippets, as opposed to GitHub proper, which is for larger projects. Tom Preston-Werner débuted the feature at a Ruby conference in 2008. Gist builds on the traditional simple concept of a pastebin by adding version control for code snippets, easy forking, and TLS encryption for private pastes. Because each \"gist\" is its own Git repository, multiple code snippets can be contained in a single page and they can be pushed and pulled using Git.\n\nGitHub launched a new program called",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is gitops?",
        "answers": [
            "an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository. Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis of the code (e.g. the style or the complexity of the code), A Docker build so that each container becomes an executable instance with the latest code of the application, A publication of the containers in a “Docker Registry” (so that the Kubernetes cluster can pull the new containers onto the servers), A “git commit” + “git push” to the repository of the configuration of the infrastructure with the new “Docker Tag” which corresponds to the version of the application, After that, “ArgoCD” detects new versions of the containers that are ready and can be updated on the Kubernetes cluster.\n\nWhy GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as possible, therefore instead of instructions, declarative and executable definitions of the whole system are written in the form of the code (often in .yaml or .tf format). If this description would not be correct, the system would not work, because the code is tested and executed at every change.\n\nPull Requests + Review for Changes to the Infrastructure\nBecause the infrastructure is now managed in Git just like any software project, the same proven concepts for quality assurance and control are applied. When there is a request for a change to the infrastructure, a “Pull Request” is created which is first subject to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "Why gitops?",
        "answers": [
            "More security, Git as a single source of truth,"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository. Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis of the code (e.g. the style or the complexity of the code), A Docker build so that each container becomes an executable instance with the latest code of the application, A publication of the containers in a “Docker Registry” (so that the Kubernetes cluster can pull the new containers onto the servers), A “git commit” + “git push” to the repository of the configuration of the infrastructure with the new “Docker Tag” which corresponds to the version of the application, After that, “ArgoCD” detects new versions of the containers that are ready and can be updated on the Kubernetes cluster.\n\nWhy GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as possible, therefore instead of instructions, declarative and executable definitions of the whole system are written in the form of the code (often in .yaml or .tf format). If this description would not be correct, the system would not work, because the code is tested and executed at every change.\n\nPull Requests + Review for Changes to the Infrastructure\nBecause the infrastructure is now managed in Git just like any software project, the same proven concepts for quality assurance and control are applied. When there is a request for a change to the infrastructure, a “Pull Request” is created which is first subject to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the code (e.g. the style or the complexity of the code), A Docker build so that each container becomes an executable instance with the latest code of the application, A publication of the containers in a “Docker Registry” (so that the Kubernetes cluster can pull the new containers onto the servers), A “git commit” + “git push” to the repository of the configuration of the infrastructure with the new “Docker Tag” which corresponds to the version of the application, After that, “ArgoCD” detects new versions of the containers that are ready and can be updated on the Kubernetes cluster.\n\nWhy",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is botnet?",
        "answers": [
            "a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is malware?",
        "answers": [
            "Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is virtual computing?",
        "answers": [
            " Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is artificial intelligence?",
        "answers": [
            "A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is computer science?",
        "answers": [
            "The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Not to be confused with Deathlok or Dreadlock.\nThis article is about the computer science concept. For other uses, see Deadlock (disambiguation).\nBoth processes need resources to continue execution. P1 requires additional resource R1 and is in possession of resource R2, P2 requires additional resource R2 and is in possession of R1; neither process can continue.\nFour processes (blue lines) compete for one resource (grey circle), following a right-before-left policy. A deadlock occurs when all processes lock the resource simultaneously (black lines). The deadlock can be resolved by breaking the symmetry.\n\nIn concurrent computing, deadlock is any situation in which no member of some group of entities can proceed because each waits for another member, including itself, to take action, such as sending a message or, more commonly, releasing a lock",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is deep learning?",
        "answers": [
            "A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is CAP Theorem?",
        "answers": [
            "CAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions, the system can tradeoff between latency ('L') and consistency ('C').\n\nThe first part of the theorem (PAC) is the same as the CAP theorem, and the ELC is the extension.\n\nExample Systems\nDynamo and Cassandra are PA/EL systems: They choose availability over consistency when a partition occurs; otherwise, they choose better latency.\nBigTable and HBase are PC/EC systems: They will always choose consistency, giving up availability and lower latency.\nMongoDB can be considered PA/EC: MongoDB works in a primary/secondaries configuration. In the default configuration, all writes and reads are performed on the primary. As all replication is done asynchronously (from primary to secondaries), when there is a network partitions there is a loss of consistency during partitions.\nWhen MongoDB is configured to write on majority replicas and read from the primary, it could be categorized as PC/EC.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system can tradeoff between latency ('L') and consistency ('C').\n\nThe first part of the theorem (PAC) is the same as the CAP theorem, and the ELC is the extension.\n\nExample Systems\nDynamo and Cassandra are PA/EL systems: They choose availability over consistency when a partition occurs; otherwise, they choose better latency.\nBigTable and HBase are PC/EC systems: They will always choose consistency, giving up availability and lower latency.\nMongoDB can be considered PA/EC: MongoDB works in a primary/secondaries configuration. In the default configuration, all writes and reads are performed on the primary. As all replication is done asynchronously (from primary to secondaries), when there",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is API?",
        "answers": [
            "\nAPI is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "So you decided that you are going to use the service model of the software for your killer app, It makes sense because your app cannot work in isolation. your app needs to store, retrieve and update bits of application for it to work. also users can interact with each other on your application. In order not to talk only about abstract concepts, let's imagine that you are building your own version of twitter, you found the name \"Super Awesome App\" free and you decided to use it for your application. Congratulations you have accomplished one of the most difficult tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing these technologies you will be able to create the super fancy frontend for your application, Users will use these applications as the interface to your application. mobile apps will be downloaded by the user and launched on his mobile phone while the web application will be run on the user's web browser (chrome , firefox , safari etc..).\n\nAll these applications will contain the following main screens\n\n    Login screen (let's keep it email + password for simplicity now)\n    Profile screen (users will see their information + the messages that they post)\n    Followers screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes the concept of APIs (Application Programmable Interfaces).\n\nAPIs (Application Programmable Interfaces)\n\nAPI is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API. \n\nIn the \"Super Awesome App\" we need the the following functionalities that will be implemented as apis.\nAuthenticate the user : Given username + password from interface check if user is already registered in the application\nRetrieve user own messages\nRetrieve user followers\nSearch all users by username (for user to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the insights provided by behavioral analytics?",
        "answers": [
            "Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias, and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "chain of responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\n\ndecorator design pattern is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "Where does behavioral analytics used?",
        "answers": [
            "Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias, and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "chain of responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\n\ndecorator design pattern is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is internet?",
        "answers": [
            "An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures)"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What wi-fi means?",
        "answers": [
            "A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is machine learning?",
        "answers": [
            "a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI)."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is statistics?",
        "answers": [
            " the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is mean by neural network?",
        "answers": [
            "Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a network partitions there is a loss of consistency during partitions.\nWhen MongoDB is configured to write on majority replicas and read from the primary, it could be categorized as PC/EC.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What does mean by server?",
        "answers": [
            "master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a data center?",
        "answers": [
            "A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is 5g?",
        "answers": [
            "The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is mean by model?",
        "answers": [
            "A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you decided that you are going to use the service model of the software for your killer app, It makes sense because your app cannot work in isolation. your app needs to store, retrieve and update bits of application for it to work. also users can interact with each other on your application. In order not to talk only about abstract concepts, let's imagine that you are building your own version of twitter, you found the name \"Super Awesome App\" free and you decided to use it for your application. Congratulations you have accomplished one of the most difficult",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is cloud?",
        "answers": [
            "A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is cloud computing?",
        "answers": [
            "Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is data compression?",
        "answers": [
            "A reduction in the size of a file or other form of digital data."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is the term technology means?",
        "answers": [
            "The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What does mean for app?",
        "answers": [
            "Short for application, or a computer program designed for a specific task."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks.\n\ninternet: An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nWi-Fi: A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nwireless: (in telecommunications) An adjective that describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted to the particular conditions in which it developed. Or the term can refer to changes that occur as some natural progression within the non-living world (such as computer chips evolving to smaller devices which operate at an ever faster speed).\n\nintelligence: The ability to collect and apply knowledge and skills.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nrobot: A machine that can sense its environment, process information and respond with specific actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp: Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such as adding two numbers.\n\nprogram is a series of instructions for a computer.\n\nserver is a master computer that manages all of the computers, terminals, data and programs that may be shared by the devices that are connected to it.\n\nStatistics: A branch of mathematics that uses collected data to express the likelihood of something. For example: 5 out of 10 children brush their teeth.\n\ntechnology is The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you decided that you are going to use the service model of the software for your killer app, It makes sense because your app cannot work in isolation. your app needs to store, retrieve and update bits of application for it to work. also users can interact with each other on your application. In order not to talk only about abstract concepts, let's imagine that you are building your own version of twitter, you found the name \"Super Awesome App\" free and you decided to use it for your application. Congratulations you have accomplished one of the most difficult",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the concept of APIs (Application Programmable Interfaces).\n\nAPIs (Application Programmable Interfaces)\n\nAPI is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API. \n\nIn the \"Super Awesome App\" we need the the following functionalities that will be implemented as apis.\nAuthenticate the user : Given username + password from interface check if user is already registered in the application\nRetrieve user own messages\nRetrieve user followers\nSearch all users by username (for user",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "Where I could get roadmap to start a job?",
        "answers": [
            "roadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "websites, healthcare applications, gaming platforms, and wealth management in banking. Silipo explains further, “The goal is to study the mass of people, and the key is the availability of large amounts of data.“\n\nKathy Brunner, CEO of Acumen Analytics, refers to research that the global behavior analytics market is projected to reach $2.2 billion by 2026, from $427.3 million, at a compound annual growth rate of 32% from 2022 to 2026.\n\nBrunner shares these insights on the business opportunities. “The current focus is mainly retail, and why not? Where I see real transformation is in combining this capability with AI/ML, other advanced",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a network partitions there is a loss of consistency during partitions.\nWhen MongoDB is configured to write on majority replicas and read from the primary, it could be categorized as PC/EC.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are solid principles?",
        "answers": [
            "The SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "How to plan for a new career learning?",
        "answers": [
            "a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.\n\nneural network: Also known as a neural net. A computer program designed to manage lots of data and in complex ways. These systems consist of many (perhaps millions) of simple, densely linked connections within a computer. Each connection, or node, can perform a simple operation. One node might be connected to several feeder nodes, which send it data. Several more nodes in another layer sit ready to accept the newly processed data and act upon them in some other way. The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the code (e.g. the style or the complexity of the code), A Docker build so that each container becomes an executable instance with the latest code of the application, A publication of the containers in a “Docker Registry” (so that the Kubernetes cluster can pull the new containers onto the servers), A “git commit” + “git push” to the repository of the configuration of the infrastructure with the new “Docker Tag” which corresponds to the version of the application, After that, “ArgoCD” detects new versions of the containers that are ready and can be updated on the Kubernetes cluster.\n\nWhy",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "its product documentation (now to be found on Microsoft Docs).\n\nGitHub also operates a pastebin-style site called Gist, which is for code snippets, as opposed to GitHub proper, which is for larger projects. Tom Preston-Werner débuted the feature at a Ruby conference in 2008. Gist builds on the traditional simple concept of a pastebin by adding version control for code snippets, easy forking, and TLS encryption for private pastes. Because each \"gist\" is its own Git repository, multiple code snippets can be contained in a single page and they can be pushed and pulled using Git.\n\nGitHub launched a new program called",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What stands for SOLID?",
        "answers": [
            " S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What should we consider when writing a code?",
        "answers": [
            "Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "implementing microservice observability to identify malicious API activities.\n    Organizations can also consider data analytics, analytics process automation, or machine learning platforms to centralize behavioral data and create behavioral analytics capabilities. Some data platforms include Alteryx, Dataiku, Databricks, DataRobot, Informatica, KNIME, RapidMiner, SAS, Tableau, Talend, and many others.\n    IoT, wearable, augmented reality/virtual reality, voice-enabled devices, and cameras with computer vision capabilities all represent new inputs and data sources for capturing behavioral data.\n\nThere’s little doubt that more organizations will consider using behavioral analytics capabilities to grow revenue, improve experiences, and reduce risks.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "possible, therefore instead of instructions, declarative and executable definitions of the whole system are written in the form of the code (often in .yaml or .tf format). If this description would not be correct, the system would not work, because the code is tested and executed at every change.\n\nPull Requests + Review for Changes to the Infrastructure\nBecause the infrastructure is now managed in Git just like any software project, the same proven concepts for quality assurance and control are applied. When there is a request for a change to the infrastructure, a “Pull Request” is created which is first subject",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What to do if there is no much documentation?",
        "answers": [
            "not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the benefits of involving in side projects?",
        "answers": [
            "When you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable. This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need refinement, this can be an opportunity to learn something new. If this is not the case, this might be an indication that your code was overly complicated or is not well documented.\n\nIn either case, it’s important to keep a positive mindset and be ready to learn something new.\n\n5. Get Familiar with Documentation: As a Junior Developer, you may have found it easier to learn a new skill by following a YouTube video or some other course. This is a great technique to learn however, it is important to start getting familiar with the documentation. The documentation of any package you are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "its product documentation (now to be found on Microsoft Docs).\n\nGitHub also operates a pastebin-style site called Gist, which is for code snippets, as opposed to GitHub proper, which is for larger projects. Tom Preston-Werner débuted the feature at a Ruby conference in 2008. Gist builds on the traditional simple concept of a pastebin by adding version control for code snippets, easy forking, and TLS encryption for private pastes. Because each \"gist\" is its own Git repository, multiple code snippets can be contained in a single page and they can be pushed and pulled using Git.\n\nGitHub launched a new program called",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is known as back-end engineering?",
        "answers": [
            "Server-side programming"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "resources only when it has none; First, they must release all their currently held resources before requesting all the resources they will need from scratch. This too is often impractical. It is so because resources may be allocated and remain unused for long periods. Also, a process requiring a popular resource may have to wait indefinitely, as such a resource may always be allocated to some process, resulting in resource starvation.[16] (These algorithms, such as serializing tokens, are known as the all-or-none algorithms.)\n\nThe no preemption condition may also be difficult or impossible to avoid as a process has to be",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is url stands for?",
        "answers": [
            "Uniform Resource Locator"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the advantages of using http?",
        "answers": [
            "Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is client-server architecture?",
        "answers": [
            "The client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "towards a horizontally distributed approach to scaling architecture. This is driven by the demand for more reliability through a redundancy strategy, and the requirement for improved utilisation through resource sharing. Horizontal scaling comes at a cost, if you cannot redesign your system to be able to distribute load you will be only left with the Vertical Scaling option. In this case combining the two approaches can allow us to benefit from both paradigms.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What do a url contains?",
        "answers": [
            "A URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is HTTP?",
        "answers": [
            "HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia]."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is the difference between http and https?",
        "answers": [
            "HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "now has more computing resources. Horizontal scaling on the other hand means scaling by adding more machines that can serve customer requests (also described as “scaling out”).\n\nOne of the fundamental differences between the two is that horizontal scaling requires changing the system that that the load (in this case customer requests) can be executed in parallel across multiple machines. In many respects, vertical scaling is easier because the system doesn't really doesn’t need to change. Rather, you’re just running the same code on higher-spec machines.\n\nScaling out Vs Scaling up\n\nIn choosing between scaling out and scaling up, there are various factors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system can tradeoff between latency ('L') and consistency ('C').\n\nThe first part of the theorem (PAC) is the same as the CAP theorem, and the ELC is the extension.\n\nExample Systems\nDynamo and Cassandra are PA/EL systems: They choose availability over consistency when a partition occurs; otherwise, they choose better latency.\nBigTable and HBase are PC/EC systems: They will always choose consistency, giving up availability and lower latency.\nMongoDB can be considered PA/EC: MongoDB works in a primary/secondaries configuration. In the default configuration, all writes and reads are performed on the primary. As all replication is done asynchronously (from primary to secondaries), when there",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the system and will receive the same data. It is equivalent to having a single up-to-date copy of the data.\nAvailability (A): Availability means every request received by a working node in the system must result in a response. Even when network / hardware failures occur, every request must return a result. In other terms, availability refers to a system’s ability to remain accessible even if one or more nodes in the system go down.\nPartition tolerance (P): A partition is a communication break (or a network failure) between any two nodes in the system, i.e., both nodes are up but cannot",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a web browser?",
        "answers": [
            "A web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "these technologies you will be able to create the super fancy frontend for your application, Users will use these applications as the interface to your application. mobile apps will be downloaded by the user and launched on his mobile phone while the web application will be run on the user's web browser (chrome , firefox , safari etc..).\n\nAll these applications will contain the following main screens\n\n    Login screen (let's keep it email + password for simplicity now)\n    Profile screen (users will see their information + the messages that they post)\n    Followers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a web server?",
        "answers": [
            " A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats. Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "these technologies you will be able to create the super fancy frontend for your application, Users will use these applications as the interface to your application. mobile apps will be downloaded by the user and launched on his mobile phone while the web application will be run on the user's web browser (chrome , firefox , safari etc..).\n\nAll these applications will contain the following main screens\n\n    Login screen (let's keep it email + password for simplicity now)\n    Profile screen (users will see their information + the messages that they post)\n    Followers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the cloud database deployment models?",
        "answers": [
            "Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is the advantage of cloud database?",
        "answers": [
            "main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the security threats for open source databases?",
        "answers": [
            "Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "help improve incident management, and helps gaming systems to identify cheaters.\n\nLarge enterprises with many global employees, contractors, and suppliers also leverage behavioral analytics to spot suspicious activities. Isaac Kohen, vice president of research and development at Teramind, says, “User and entity behavior analytics can identify and alert the organization to a wide range of anomalous behaviors. Potential threats can be malicious, inadvertent, or compromised activities by an employee, user, or third-party entity. It is used in many industries to prevent insider threats and analyze user behaviors for compliance and regulatory requirements.”\n\nThe data science behind behavioral analytics is often applied to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the best database security practices?",
        "answers": [
            "Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a penetration testing?",
        "answers": [
            "simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is a cloud database?",
        "answers": [
            "A cloud database runs on a cloud computing platform that delivers it to users as a service. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is database security?",
        "answers": [
            "Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What does an open source database includes?",
        "answers": [
            "An open-source database includes code components obtained from a source making software open and free for modification and reuse"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database queries that make the server reveal information. \nDenial of Service (DoS) – occurs when a threat actor repeatedly makes service requests to make the resource unavailable to the database. \nBackup exposure – occurs when the backup storage media is not protected from attacks.\nAccess control – occurs when there are no access controls to ensure only friendly parties can access the database.\n\nDatabase Security Best Practices: Secure Database User Access, Apply the least privileges principle, Use access management software, Implement standard security procedures\n\nSecure Database User Access: Securing user access is key to protecting your database. Here are several practices to help you set up and maintain secure access:\n\nApply the least privileges principle: This principle helps you ensure that each user gets the least amount of database privileges required for their job and no more, including administrators. It also requires that you provide access only during the period a user needs access and revoke it when it is no longer needed. \n\nUse access management software: Small organizations can apply the least privileges principle manually, but larger organizations need an access management system to manage this process automatically. This software typically uses predefined policies to determine authorized users and provide them with the allowed privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities – as soon as a vulnerability is discovered in your database engine, patch or update it to a safe version.\nPerform security testing – run both automated security testing and manual penetration testing to identify security weaknesses in your database and remediate them.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What mobile app developers do?",
        "answers": [
            "Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you decided that you are going to use the service model of the software for your killer app, It makes sense because your app cannot work in isolation. your app needs to store, retrieve and update bits of application for it to work. also users can interact with each other on your application. In order not to talk only about abstract concepts, let's imagine that you are building your own version of twitter, you found the name \"Super Awesome App\" free and you decided to use it for your application. Congratulations you have accomplished one of the most difficult",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "these technologies you will be able to create the super fancy frontend for your application, Users will use these applications as the interface to your application. mobile apps will be downloaded by the user and launched on his mobile phone while the web application will be run on the user's web browser (chrome , firefox , safari etc..).\n\nAll these applications will contain the following main screens\n\n    Login screen (let's keep it email + password for simplicity now)\n    Profile screen (users will see their information + the messages that they post)\n    Followers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the concept of APIs (Application Programmable Interfaces).\n\nAPIs (Application Programmable Interfaces)\n\nAPI is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API. \n\nIn the \"Super Awesome App\" we need the the following functionalities that will be implemented as apis.\nAuthenticate the user : Given username + password from interface check if user is already registered in the application\nRetrieve user own messages\nRetrieve user followers\nSearch all users by username (for user",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "analytics and digital experience analytics platforms such as Adobe Analytics, Amplitude, Contentsquare, FullStory, Glassbox, Heap, Mixpanel, and Userpilot aggregate usage metrics and provide analytics capabilities.\n    Media, e-commerce, and other content-rich websites should consider intelligent search platforms that include behavioral analytics, recommendation engines, and personalization capabilities.\n    Techniques to experiment and learn from user responses include A/B testing, user activity recordings, activity measurement tools, and customer feedback measurement practices. These aim to optimize activities based on customer segments and personas.\n    Application developers can use feature flagging to support large-scale A/B feature testing while",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Others: The next tip is applicable in all levels of software development as well as life in general. Through code reviews and general discussions, you have the opportunity to absorb knowledge. Take every opportunity to learn from others exploring their decisions and thought processes. This can be achievable by simply reading code written by other developers or asking others about their code. By reading code, you may notice the use of certain design patterns or datatypes that you may not have used had you been writing the code. Through further research, you may discover why their method may be preferable.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the skills needed to be a data scientist?",
        "answers": [
            "Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "provide. Common use cases include increasing business-to-business and business-to-consumer sales, improving customer experience, detecting anomalies, alerting on risks, and leveraging data from Internet of Things devices to identify dangerous conditions.\n\nRosaria Silipo, principal data scientist and head of evangelism at KNIME, offers this simple definition of behavioral analytics. She says, “Behavioral analytics studies people’s reactions and behavior patterns in particular situations.”\nBusiness opportunities in behavioral analytics\n\nBehavioral analytics is particularly important any time a product or service has many people doing numerous things where there are both opportunities to improve outcomes and to reduce risks. Examples include customer buying habits on large-scale e-commerce",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What graphic engineers do?",
        "answers": [
            "These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the technical skills needed for a data scientists?",
        "answers": [
            "Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\ntechnology is the application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nagent: A person or thing (it can be a chemical or a form of energy) that plays some role in getting something done.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the following methods: Process termination, Resource preemption\n\nProcess termination: one or more processes involved in the deadlock may be aborted. One could choose to abort all competing processes involved in the deadlock. This ensures that deadlock is resolved with certainty and speed.[citation needed] But the expense is high as partial computations will be lost. Or, one could choose to abort one process at a time until the deadlock is resolved. This approach has a high overhead because after each abort an algorithm must determine whether the system is still in deadlock.[citation needed] Several factors must be considered while choosing a",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control\n\nExcessive privileges – occur when you grant users more privileges than needed to perform their roles. External and internal threats can use excessive privileges to gain unauthorized access to confidential information. \nPrivilege abuse – occurs when users misuse their privileges to perform unauthorized actions. \nUnauthorized privilege escalation – occurs when attackers convert low-level access to high-level privileges.\nPlatform vulnerabilities – occur when the underlying operating system or platform is vulnerable to data leakage or corruption. \nSQL injection – occurs when an actor exploits users to send unauthorized database",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What game engineers do?",
        "answers": [
            "The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "task.\n\nwi-fi is A wireless technology that networks various electronic devices (such as cell phones and laptop computers); it allows them to share the same modem for Internet connections by using radio waves.\n\nartificial intelligence: A type of knowledge-based decision-making exhibited by machines or computers. The term also refers to the field of study in which scientists try to create machines or computer software capable of intelligent behavior.\n\navatar: (in virtual reality) An electronic rendering of some image. It becomes the virtual form of some character (even a computer or game user) that will be moved and manipulated by a computer user. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What verbs to use in resume to attract employers?",
        "answers": [
            "Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you decided that you are going to use the service model of the software for your killer app, It makes sense because your app cannot work in isolation. your app needs to store, retrieve and update bits of application for it to work. also users can interact with each other on your application. In order not to talk only about abstract concepts, let's imagine that you are building your own version of twitter, you found the name \"Super Awesome App\" free and you decided to use it for your application. Congratulations you have accomplished one of the most difficult",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What SDET stands for?",
        "answers": [
            "Software Development Engineer in Test"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the tasks or duties of a software engineer?",
        "answers": [
            "Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the available software engineering jobs?",
        "answers": [
            "Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What embedded system engineers do?",
        "answers": [
            "Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communicate with each other. A partition-tolerant system continues to operate even if there are partitions in the system. Such a system can sustain any network failure that does not result in the failure of the entire network. Data is sufficiently replicated across combinations of nodes and networks to keep the system up through intermittent outages.\n\nAccording to the CAP theorem, any distributed system needs to pick two out of the three properties. The three options are CA, CP, and AP. However, CA is not a reasonable option because a system that is not partition-tolerant will be forced to give up either",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "powerful machine in your system, it is by default a single point of failure. Horizontal scaling offers built-in redundancy because if a machine goes down you only lose computing power that was provided by the faulty machines and your system is still running fine on the rest of machines.\n\nGeographical Distribution\nImagine your system needs to serve customers across multiple geographical locations, with horizontal scaling you can add machines to your system in multiple regions, so for example customers from region A will have their requests served by machines in region A. this cuts down network latency as customer requests and server",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the skills and experience employers are looking for software engineers?",
        "answers": [
            "Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What do front-end engineers do?",
        "answers": [
            "A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the responsibilities of a software engineer?",
        "answers": [
            "Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What backend engineers do?",
        "answers": [
            "These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the skills to become a software engineer?",
        "answers": [
            "In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "training, funding, and additional resources to run events and grow their communities. To become a Campus Expert applicants must complete an online training course consisting of multiple modules designed to grow community leadership skills. \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you develop your problem-solving skills as well as general software development skills.\n\nPersonally, I would work on projects that required skills that I did not yet possess. This forced me to learn new skills in order to complete my projects. This method, therefore, served as a way of reinforcing any new skills I have learnt as well as being another project to add to my portfolio.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "   The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)\n\nHaving a plan can help you keep yourself accountable and encourage you to regularly work on developing your skills. Whilst you carry out your learning, it is important to periodically revisit your plan and adjust if necessary.\n\n2. SOLID Principles\nThe SOLID principles are practices that help you write clear, maintainable and extendable software. A Mid-Level developer should follow the SOLID principles when writing code.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What fullstack engineers do?",
        "answers": [
            "If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actions. Some robots can act without any human input, while others are guided by a human. Someone who designs or builds robots is known as a roboticist.\n\nscenario: A possible (or likely) sequence of events and how they might play out.\n\nself-driving car: Also known as a driverless car or autonomous vehicle. These cars pilot themselves based on instructions that have been programmed into their computer guidance system.\n\nsensor: A device that picks up information on physical or chemical conditions — such as temperature, barometric pressure, salinity, humidity, pH, light intensity or radiation — and stores or broadcasts that information. Scientists and engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.\n\nnetwork is a group of interconnected people or things. (v.) The act of connecting with other people who work in a given area or do similar thing (such as artists, business leaders or medical-support groups), often by going to gatherings where such people would be expected, and then chatting them up. (n. networking)\n\nprocessor (in computing) is Also called a central processing unit, or CPU, it’s a part of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "screen (users will see their followers)\n    Search screen (users can search for people to follow)\n    Home screen (users will see the messages by his followers there)\n\nNow the front end by itself has no value. if the user open your application he will see a logic screen with and username text box and password text box but without a backend to power these screens they will not be able to do anything.\n\nI will not go into much details on the front end as honestly, it is a field on its own and because you normally",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "How to advance in software engineering career?",
        "answers": [
            "You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing information. Data engineers find useful insights from data to help make informed business decisions.\n\nDevOps Engineer: DevOps comes from development and operations. A DevOps engineer is someone who facilitates, oversees, and expedites the process of code release or deployment of applications.\n\nSDET (Software Development Engineer in Test): A SDET engineer not only develops software but also performs testing. Their goal is to ensure software is robust, bug-free, and efficient.\n\nEmbedded Systems Engineer: Unlike standard software applications that run on computers or mobile devices, embedded software is used to control machines. Programs that run on a car, a microwave, or an elevator are examples of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.\n\nHow to Advance Software Engineering Career? You'll need to go above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you’re an aspiring software engineer, you can expect regular opportunities to progress your career. As you learn technical skills and gain experience, new doors will open. You’ll have the choice to continue working with  code, or to use your understanding of the software development lifecycle to lead teams.\n\nBy learning  the fundamental principles of coding and the software development process, you’ll give yourself a solid foundation to add value in any company.\n\nWe're here to describe the most common job titles in the field of software engineering, as well as the skills you need to perfect in order to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of  embedded software systems. Embedded systems engineers face unique challenges such as hard memory constraints and time-critical operation requirements.\n\nSecurity Engineer: As the name suggests, these engineers design solutions to safeguard software or networks from hackers or cyber threats.\n\ncareer path of a software engineer: Junior Software Engineer, Senior Software Engineer, Tech Lead, Team Manager, Technical Architect, Chief Technology Officer\n\nJunior Software Engineer: At the beginning of your career you’ll have limited experience and start in an entry-level position. As a junior software engineer, you’ll be required to develop software to meet client requirements within a specified time frame. You’ll report to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "above and beyond in a few key areas in order to stand out to employers, and achieve your highest earning potential. If you want to progress quickly in the field of software engineering, then plan to: Take on extra work, even outside of your immediate responsibilities, Pitch in to help others on the development team, Collaborate closely with other departments, like marketing, UX design, and data teams, to better understand their needs, Ask lots of questions so you fully understand the broader goals of your business or clients, Ask for feedback on how to improve your code, Get involved in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "software engineering communities outside of work to further improve, Share industry developments and articles with your team to establish yourself as a thought leader who's invested in the field \n\nskills needed to be a data scienist are Problem solving intuition, Statistical knowledge, Programming in an analytic language (R or Python), Curiosity (keep asking why), Communication, Creative Thinking, Relationship Building, Authenticity, Persistence. \n\nTechnical skills for a data scientist are Advanced programming and deep mathematical knowledge, Passion for finding and solving problems, Analytical techniques like how to make visualizations and use summary statistics, Understanding of A/B testing and statistical significance, Python to gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Short for application, or a computer program designed for a specific task.\n\njournal: (in science) A publication in which scientists share their research findings with experts (and sometimes even the public). Some journals publish papers from all fields of science, technology, engineering and math, while others are specific to a single subject. The best journals are peer-reviewed: They send all submitted articles to outside experts to be read and critiqued. The goal, here, is to prevent the publication of mistakes, fraud or sloppy work.\n\nmodel: A simulation of a real-world event (usually using a computer) that has been developed to predict one or more likely outcomes. Or an individual that is meant to display how something would work in or look on others.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "they are very much different in the context of deadlock handling. Deadlock avoidance does not impose any conditions as seen in prevention but, here each resource request is carefully analyzed to see whether it could be safely fulfilled without causing deadlock.\n\nDeadlock avoidance requires that the operating system be given in advance additional information concerning which resources a process will request and use during its lifetime. Deadlock avoidance algorithm analyzes each and every request by examining that there is no possibility of deadlock occurrence in the future if the requested resource is allocated. The drawback of this approach is its requirement",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "condition means that no process will have exclusive access to a resource. This proves impossible for resources that cannot be spooled. But even with spooled resources, the deadlock could still occur. Algorithms that avoid mutual exclusion are called non-blocking synchronization algorithms.\n\nThe hold and wait or resource holding conditions may be removed by requiring processes to request all the resources they will need before starting up (or before embarking upon a particular set of operations). This advance knowledge is frequently difficult to satisfy and, in any case, is an inefficient use of resources. Another way is to require processes to request",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Tips to become a mid level developer are Plan Ahead, SOLID Principles, Learn Data Structures and Big O, Learn from Others, Get Familiar with Documentation, Work on Your Own Projects\n\nThis article will explore 6 tips on how you can become a Mid-Level Software Developer. These tricks and tips are personal to me and are the techniques I adopted to become a Mid-Level Developer. That means that you may disagree with some of the points and have alternative opinions. That is absolutely fine, as my tips and tricks are by no means a universal solution. That said, I hope you are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computation. The writing of these instructions is known as computer programming.\n\ncomputer science is the scientific study of the principles and use of computers.\n\ndata is facts and/or statistics collected together for analysis but not necessarily organized in a way that gives them meaning. For digital information (the type stored by computers), those data typically are numbers stored in a binary code, portrayed as strings of zeros and ones.\n\ndigital (in computer science and engineering) is An adjective indicating that something has been developed numerically on a computer or on some other electronic device, based on a binary system (where all numbers are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "it always stores copies of the same data in multiple locations. \nFederated: Contains multiple autonomous database systems, allowing partial or controlled sharing of data sources. Federated systems can access the data that is located at different data sources and combine them. \n\nHow Have Database Management Systems Evolved?\nIn the last decade, the amount of data generated has increased tremendously, rising from two zettabytes of data in 2010 to 64 zettabytes in 2020. The total volume is expected to reach 180 zettabytes by 2025. The need for database management systems to process, manage, interpret, and analyze data has never been greater. The",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is amazon ec2?",
        "answers": [
            "An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the features of amazon ec2?",
        "answers": [
            "Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "don't have to worry about it as your application grows unless you are adding new features for your users to enjoy.\nStep Two: Building the backend\n\nYou start thinking about the backend is seems easy. I need a place to store all of the program information [users , messages, relations between users] in a structured way. I also need some program that receives the user input and figure out how to use the stored data to perform operation. Front end needs to access this program to send user input and it is expecting this program to return the correct output. here comes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the types of ec2 instances?",
        "answers": [
            "General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "textures? Need to design with power? Or do you just have money to spend and want to play games on streaming?. The Accelerated Computing Instances are best for graphics applications and streaming.\n\nStorage Optimized: These Kind of instances are provisioned with a more significant amount of TB for storage. You are going to have the best I/O Performance. These instances are a great option for those databases that need to be written regularly on the disk, here we have three groups of instances: H, I, and D.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting\n\nVirtual Private Server (VPS) Hosting is a cross between shared hosting and dedicated hosting. A physical server (also called the parent) runs several VPS instances, which are granted a strict portion of the parent server’s hardware resources. These instances are rented out and operate as independent servers from one another. So, it’s essentially renting part of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "data organization, data analytics, and more\n\nDatabase management systems offer stringent data security while enabling various Data Management tasks. \n\nThere are three types of Database management systems: Centralized, Distributed, Federated\nCentralized: All the data lives in a single location, which might be a computer system or a server CPU. Although this kind of database architecture offers increased data security, bottlenecks are common due to high traffic. \nDistributed: Data can be stored in multiple locations. Distributed database systems are easy to manage remotely from a central database management system. The retrieval of lost data is a simple process in a distributed system, as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are now in need for Hosting.\n\nyou might be overwhelmed by the technologies that exist today, you have server-less hosting, you have infrastructure as a service (IaaS) , platform as a server (PaaS), you have managed hosts (Ec2 ... ) and you have some of the old models that are still alive today like Shared Hosting, VPS, dedicated servers etc ..\n\nLets start from the basics, you need computing power, so here are the options for you :\n\nShared Hosting: Shared hosting is the most basic and cheapest of the hosting options. It allows you to rent space on a shared hosting server. These servers host many other applications on the same server alongside your website. These plans are the cheapest solutions, as they provide the least performance, security, and flexibility. meaning if there is a bug in one of the other applications, yours will be in danger.\nVPS Hosting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "processes, P = {P1, P2, …, PN}, such that P1 is waiting for a resource held by P2, P2 is waiting for a resource held by P3 and so on until PN is waiting for a resource held by P1.[4][9]\n\nThese four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.[9]\n\nWhile these conditions are sufficient to produce a deadlock on single-instance resource systems, they only indicate the possibility of deadlock on systems having multiple instances of resources.[10]\nDeadlock handling\n\nMost current operating systems cannot prevent deadlocks.[11] When a deadlock occurs, different operating",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computer that performs numerical calculations or other types of data manipulation. It can also be a type of software, or programming, that translates some other program into a form that can be understood by the computer running it.\n\nresilient is known as To be able to recover fairly quickly from obstacles or difficult conditions. (in materials) The ability of something to spring back or recover to its original shape after bending or otherwise contorting the material.\n\nrouter in computer science is a device that handles the exchange of digital information between different points in a network.\n\nserver is a term for a computer",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is continuous integration?",
        "answers": [
            "DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. "
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails, the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality, Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is the advantage of using continuous integration or CI?",
        "answers": [
            "helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster."
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails, the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality, Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "Rapid feedback, thanks to the CI Server.\n\nWHY DO WE NEED CONTINUOUS INTEGRATION?: We need Continuous integration because it allows software teams to catch bugs more rapidly. Since the CI Server checks the code's quality, the software released to production will be of higher quality. Continuous integration makes it easier to release more features to the end-users.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to a “Code Review” before the changes can be applied to the system.\n\nIs GitOps a replacement for DevOps?: No. GitOps is a concept and DevOps is a culture. GitOps assumes and supports DevOps culture. GitOps is a technique for implementing Continuous Delivery, Continuous Deployment and Infrastructure as Code. Although DevOps and GitOps share principles such as automation and self-managed infrastructure, it doesn’t really make sense to compare them. However, these common principles certainly make it easier to adopt a GitOps workflow if you are already actively using DevOps techniques\n\nSoftware versioning: With software versioning, we can uniquely identify the different phases",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "writing code.\n\nThe acronym SOLID stands S: Single-responsibility principle, O: Open-closed principle, L: Liskov substitution principle, I: Integration segregation principle, D: Dependency inversion principle\n\nDigitalOcean has a great guide on the SOLID principles which I recommend visiting for more detailed explanations on each principle. I won’t explain any of the points here simply because DigitalOcean does a great job at explaining each point.\n\n3. Learn Data Structures and Big O: Using the correct data structure can very much decide how performant your code is. Understanding when to use a certain data type can help you breeze through those big O questions during your",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "role will also involve looking into the scaling of support systems.\n\nChief Technology Officer: A CTO is the head of an organization’s technological needs. They oversee R&D and employ technology to improve products and services for their clients. This is often considered the pinnacle of a software engineer's career.\n\nresponsibilities of a software engineer are Design and develop software using the software development lifecycle, Meet with customers to understand their needs and provide continuous updates, Design and develop test cases and debug automation suites, Collaborate with cross-functional teams and clients to come up with effective solutions, Monitor and maintain existing systems and work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "often rely on sensors to inform them of conditions that may change over time or that exist far from where a researcher can measure them directly.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the GitHub Student Developer Pack to give students free access to popular development tools and services. GitHub partnered with Bitnami, Crowdflower, DigitalOcean, DNSimple, HackHands, Namecheap, Orchestrate, Screenhero, SendGrid, Stripe, Travis CI, and Unreal Engine to launch the program. In 2016 GitHub announced the launch of the GitHub Campus Experts program to train and encourage students to grow technology communities at their universities. The Campus Experts program is open to university students 18 years and older across the world. GitHub Campus Experts are one of the primary ways that GitHub funds student-oriented events and communities, Campus Experts are given access to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "HTTP request (because Linda is requesting to register her details to create an account), and the server responds with an HTML page.\n\nThe web browser requests the web server using the HTTP protocol transported over TCP/IP.\n\nThe server responds with an HTML page, shown in the browser.\n\nURL stands for Uniform Resource Locator.\n\nA URL contains three critical pieces of information: The type of protocol: in this case, we're using an HTTP protocol, The name of the server: www.university.ac.uk, The file's name in the server: register.html.\n\nIf everything has gone well server-side, Linda will be able to see her data in HTML or other formats.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "displayed using a series of only zeros and ones).\n\nhacking in computing is To get unapproved — often illegal — access to a computer, usually to steal or alter data or files. Someone who does this is known as a hacker.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things (IoT) is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "framework.[14]\nDetection\n\nUnder the deadlock detection, deadlocks are allowed to occur. Then the state of the system is examined to detect that a deadlock has occurred and subsequently it is corrected. An algorithm is employed that tracks resource allocation and process states, it rolls back and restarts one or more of the processes in order to remove the detected deadlock. Detecting a deadlock that has already occurred is easily possible since the resources that each process has locked and/or currently requested are known to the resource scheduler of the operating system.[13]\n\nAfter a deadlock is detected, it can be corrected by using one",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the steps to contribute to open-source?",
        "answers": [
            "Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the GitHub Student Developer Pack to give students free access to popular development tools and services. GitHub partnered with Bitnami, Crowdflower, DigitalOcean, DNSimple, HackHands, Namecheap, Orchestrate, Screenhero, SendGrid, Stripe, Travis CI, and Unreal Engine to launch the program. In 2016 GitHub announced the launch of the GitHub Campus Experts program to train and encourage students to grow technology communities at their universities. The Campus Experts program is open to university students 18 years and older across the world. GitHub Campus Experts are one of the primary ways that GitHub funds student-oriented events and communities, Campus Experts are given access to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "Where to find good first issues to contribute open-source?",
        "answers": [
            "firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of communication (discord, slack ,etc) there u will get to network and grow your skills while working and helping other developers\n\nLinks to find good first issue to start your open-source contribution: firsttimersonly.com, project-awesome.org/MunGell/awesome-for-beg, goodfirstissues.com, goodfirstissue.dev\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "project repository. As a beginner you should tackle good-first-issue or help-wanted labelled issues. Also there are many otherways to contribute to open source not only code contribution you can make non-code contribution too like documentation , giving reviews etc.\n\nStep 5: make a Pull Request\nAfter making the required changes and make a Pull Request. After sometime someone from the organisation you are contributing to will approve that pr and will merge it. Now the last process may take some time so be patient and keep contributing\n\nStep 6: join a community - Last but not the least join the organisation's channel of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Contributing to open-source can be overwhelming so here are n steps to help to make your first shot at open-source\n\nfollowings are the steps to contribute to open source: Select a project, Clone the Project, Use the project, Find an issue, make a Pull Request, join a community\n\nStep 1 : Select a project\nselect a project either by Github Explore or searching for a specific technology or filtering by your preferred language such as javaScript,etc. and explore different projects. images.png\n\nStep 2 : Clone the Project\nnow that you have decided which project you want to work on Fork that project. Forking the project",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can be kept hostage for ransom or sold to the highest bidder.\n\nOpen-Source Database Security Threats\n\nAn open-source database includes code components obtained from a source making software open and free for modification and reuse. Closed-source or proprietary databases, on the other hand, are provided under a license that protects the code to prevent copying and any unauthorized use. \n\nBecause open-source software is exposed to additional risks, the field of open-source security has emerged to help organizations protect their open-source investments against security risks.\n\nOpen-source databases are exposed to various security threats, they are: Excessive privileges, Privilege abuse, Unauthorized privilege escalation, Platform vulnerabilities, SQL injection, Denial of Service (DoS), Denial of Service (DoS), Backup exposure, Access control",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can. Depending on your scenario, there are various types of security tests you can implement.\n\nA penetration test is a simulated external attack that can help you discover the ways in which attackers can breach your database. Vulnerability assessments can help you inventory and prioritize vulnerabilities so you can address the most critical issues.\n\nConclusion\n\nIn this article, I explained the basics of database security, and provided a few best practices that will help you secure your databases more effectively:\n\nSecure database user access – ensure database user accounts follow the least privilege principle, use strong passwords and encryption.\nIdentify and patch open-source vulnerabilities –",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "actually exist.\n\nFor example, if a process releases a resource R1 and issues a request for R2, and the first message is lost or delayed, a coordinator (detector of deadlocks) could falsely conclude a deadlock (if the request for R2 while having R1 would cause a deadlock). \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "NVD. Additionally, NVD records are kept in a format that can make it difficult to determine which component versions are affected by the vulnerability. Ideally, you should use NVD alongside other sources. \n\nWhen you determine open-source vulnerabilities affecting your databases, immediately apply the security patch or upgrade to a safe version. In some cases, this might involve refactoring some of your queries or data structures, because the new version may not be fully backward compatible.\nPerform Security Testing\n\nSecurity testing can help you find vulnerabilities and security weaknesses that threaten your database. The goal is to discover security gaps before threat actors",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "privileges. It can provide temporary access whenever a user needs access to the database. \n\nImplement standard security procedures: You should enforce strong passwords and encrypt and add salt to all password hashes. Another standard security procedure for database accounts is to ensure they get locked after three or four login attempts. Additionally, you should set up a procedure that deactivates the account once an employee leaves or moves to a different role.\nIdentify and Patch Known Open-Source Vulnerabilities\n\nThe National Vulnerability Database (NVD) provides a wealth of information on publicly disclosed open-source software vulnerabilities. However, not all vulnerabilities are reported to the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "limitations like memory and processing power.\n\nGraphics Engineer: These engineers use 2D and 3D digital platforms for gaming and video production. In the early days, graphics engineers were required to have expertise in math and computer science. But more recently, open-source frameworks like Unity and OpenGL handle most of the heavy lifting.\n\nGame Engineer: The video game industry is big business and game designers are highly sought-after. The role typically involves modeling physics, 2D and 3D graphics, and game mechanics.\n\nData Engineer: Software  engineers that specialize in big data are called data engineers.  They’re responsible for storing, organizing, managing, and analyzing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.\n\n6. Work on Your Own Projects: I appreciate that not everyone has the time for the next tip. Some people have other commitments and simply cannot find the time to work on side projects. However, if you are able to do so, I would highly recommend working on side projects.\n\nWhen you work on side projects, you tend to encounter challenges that need solving. By solving these challenges you develop your problem-solving skills as well as general software development skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one study, 75% of databases will be migrated to the cloud by the end of 2022. Cloud database management systems can store data in any of the cloud storage tiers in different types of data models, including relational, non-relational, and more. During the pandemic, many organizations offered remote working opportunities, and cloud-based systems allowed employees to access their work-related datasets at any time from anywhere.\nIncreased data security: The recent rise of cyber threats and data breaches has inspired an even greater emphasis on data security in database management systems, especially those in the cloud.\nOpen-source cloud: Most organizations are looking for",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "people, customers, and users, but it can also be applied to the entities operating in large-scale systems.\n\nTodd Mostak, CTO and cofounder of Heavy.AI, shares this wider perspective: “Behavioral analytics is a data-driven approach to tracking, predicting, and leveraging behavior data to make informed decisions. With the shipping delays and supply chain shortages today, behavioral analytics technology can monitor the activity of billions of ships, examine ports, and study global shipping patterns to help experts solve these issues.”\nThe data science behind behavioral analytics\n\nBehavior analytics is a broad application of data science, machine learning, and AI techniques. Scott Toborg, head of data",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "will make a local copy of the Project in your repository. now you have a local copy of the project in your repository clone the project using the git clone command in git. git clone <your-github-repo-url-you-copied>\n\nStep 3 : Use the project - set up the project in your local host environment and run the project locally by going through the documentation and get yourself comfortable with the project.\n\nStep 4: Find an issue - Now as u are familiar with the project now it's time to find a issue to work on you can find that in issue tag of the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "candidate for termination, such as priority and age of the process.[citation needed]\nResource preemption: resources allocated to various processes may be successively preempted and allocated to other processes until the deadlock is broken.[15][failed verification]\n\nPrevention\nMain article: Deadlock prevention algorithms\n(A) Two processes competing for one resource, following a first-come, first-served policy. (B) Deadlock occurs when both processes lock the resource simultaneously. (C) The deadlock can be resolved by breaking the symmetry of the locks. (D) The deadlock can be prevented by breaking the symmetry of the locking mechanism.\n\nDeadlock prevention works by preventing one of the four Coffman conditions from occurring.\n\nRemoving the mutual exclusion",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "second resource.\n    The deadlock can be resolved by cancelling and restarting the first process.\n\n\nNecessary conditions for deadlock: Mutual exclusion, Hold and wait or resource holding, No preemption, No preemption. These four conditions are known as the Coffman conditions from their first description in a 1971 article by Edward G. Coffman, Jr.\n\nA deadlock situation on a resource can arise if and only if all of the following conditions occur simultaneously in a system:\n\nMutual exclusion: At least one resource must be held in a non-shareable mode; that is, only one process at a time can use the resource. Otherwise,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitOps?: More security, Git as a single source of truth, \n\nMore security\nWith the GitOps concept we achieve more security because we do not need SSH credentials or anything else to perform a deployment. An application like Flux or ArgoCD installed on the server only needs access to the repository with the configuration of the environment. Through this access, current configurations can be updated on the Kubernetes cluster by a “pull” of the Git repository.\n\nGit as a single source of truth\nBecause not only the application but also the declarative configuration of the infrastructure lives in Git, every change is traceable, every",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What is gitlab?",
        "answers": [
            "an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "does HTTPS differ from HTTP?: HTTPS is a safer version of HTTP. HTTPS ensures that the data exchanged between the client and the server is secure, uncorrupted and intercepted.\n\n#4 WHAT IS A WEB BROWSER?\n\nA web browser is a client-side application which requests resources from web servers.Examples of web browsers are Google Chrome, Microsoft Edge, Mozilla Firefox, etc.\n\nFor example, whenever you search for a restaurant to have dinner using one of these web browsers, you request a web server to access and view a resource.\n\n#5. WHAT IS A WEB SERVER?: A web server is a program which runs on the server. A web server processes all the requests coming from the client. A web server accepts a request and (if possible) gives back an HTTP response accompanied by an HTML page. Apache is one of the most popular web servers.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is GitOps?\n\nGitOps is an operational framework that applies DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD tools to infrastructure automation. The idea of GitOps is to have a Git repository that always contains declarative descriptions of the current desired infrastructure for their projects on your servers. In addition, an automated process is defined to bring the servers into compliance with the described state and their configurations in the repository. If you want to deploy a new application or update an existing one, all you need to do is update the infrastructure repository.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Google Chrome web browser on a Windows laptop.\n\nWhen Linda creates an account, she's interacting with the website's front-end part, also known as the client-side. In short, the \"client\" is what you see whenever you interact with an app, website, etc.\n\nA client can be a physical device (such as a laptop, smartphone, tablet, etc), or a program (such as a web browser). The client-side of the program is the equivalent of the front end.\n\nThe client is the device that allows you to make requests over the internet.\n\nThe server is the \"invisible\" part of the application.\n\nA server instead is not a physical",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "You’re shopping for a car. You visit a manufacturer’s website to learn about model trims, review deals listed on the local dealer’s website, and then visit the dealership. What information can the sales rep review to learn about your purchasing needs and determine the best options to offer you?\n\nThe security operations center receives an alert about an employee’s activities on the network. Is the employee learning about different business areas and just working at unexpected hours from a remote location? Or is this malicious behavior and the SOC should take action?\n\nThese are examples of insights that user behavior analytics can",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your path to modern Data Architecture – September 19-22, 2022.\nRegister Now\n\nWhat Is Database Security?: Database security, an important branch of information security, involves setting up controls and mechanisms to protect the database and the database management system (DBMS) accessing this data from malicious attacks. The goal is to protect the data’s integrity, availability, and confidentiality and comply with relevant regulations. \n\nDatabase security measures should also be applied to the underlying infrastructure, such as the servers hosting the database and any backups. Threat actors constantly create new ways to infiltrate databases because they hold corporate, sensitive, and financial information. This information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "If you're a software engineer, you must have at least a basic knowledge of web technologies and client-server architecture.\n\nClient-server architecture is one of those concepts that all software engineers should know.\n\nThis article will explain the client-server architecture with examples.\n\nLet's start.\n\n1. WHAT IS THE CLIENT-SERVER ARCHITECTURE?\n\nLet's take the following example:\n\nLinda is a first-year computer science student who wants to create an account to access the university's portal. She has to register her details (such as name, surname, date of birth, etc.), press the REGISTER button, and wait 'til she receives a message to confirm the account creation. This happens using the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "device. It's a computer program responsible for serving the incoming client's requests.\n\nThe server-side of an application/website is where all the behind-the-scenes mechanisms happen. It has different responsibilities, and one of them is to store data.\n\nServer-side programming is also known as backend engineering.\n\nThe client-server architecture is an architecture that has: A client that sends a request, A server that responds to a client's request, Client-server architecture is also known as Request-Response Architecture.\n\n#2. WHAT HAPPENS WHEN LINDA SENDS THE REQUEST?\n\nLet's take the following example:\n\nLinda requests a page using Chrome via the below URL:\n\nOnce she hits the REGISTER button, the client sends an",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of our software that we have delivered. When we talk about a particular versioning, we use this number or text as a reference to our software at a particular time.\n\nRelease Notes: Release notes or a change-log can be used to maintain a list of changes and their description can be maintained. In this way we give ourselves and the users of a particular system a way to quickly and easily see what progress and changes have been made.\n\nVersioning: For versioning we use so called “Semantic Versioning”, MAJOR versioning when you make incompatible API changes, MINOR versioning when you add functionality",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "Which languages are used to build gitlab?",
        "answers": [
            "Ruby programming language, with some parts later rewritten in the Go programming language"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "GitLab Inc. is an open-core company that provides GitLab, a DevOps software package that combines the ability to develop, secure, and operate software in a single application. The open source software project was created by Ukrainian developer Dmitriy Zaporozhets and Dutch developer Sytse Sijbrandij.[10] GitLab Inc. was considered the first partly Ukrainian unicorn valued more than $1 billion in 2018.\n\nSince its founding, GitLab Inc. has been centered around remote work.[13] GitLab has an estimated 30 million registered users, with 1 million being active licensed users.\n\nThe GitLab software was originally written in the Ruby programming language, with some parts later rewritten in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of the code (e.g. the style or the complexity of the code), A Docker build so that each container becomes an executable instance with the latest code of the application, A publication of the containers in a “Docker Registry” (so that the Kubernetes cluster can pull the new containers onto the servers), A “git commit” + “git push” to the repository of the configuration of the infrastructure with the new “Docker Tag” which corresponds to the version of the application, After that, “ArgoCD” detects new versions of the containers that are ready and can be updated on the Kubernetes cluster.\n\nWhy",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to the remote repository, run your tests locally. If any tests fail, address the failing tests before pushing your changes remotely.\n\nOnce all tests pass on your local machine, you're ready to push your changes remotely.\n\nWhen you push your changes remotely:\nA CI Server detects any changes made by the engineers.\nIf there are any changes, the CI Server looks for the most recent source code version and starts executing the build script.\nOnce the build is generated, the CI Server validates all the test cases and assesses the quality of the code.\nThen, the CI Server gives you feedback via email.\nIf the build fails,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "your team leader, who will act as a mentor and guide you. During this period of your career, you have the opportunity to learn new  skills and gain essential experience working on real-life software projects.\n\nSenior Software Engineer: After a few years, you’ll become a senior software engineer. You’ll learn new programming languages, and master the software development lifecycle. You may have the opportunity to train junior engineers or even manage a small team of your own. You’ll start to be  introduced to other business elements such as project budgets and  high-level company objectives.\n\nTech Lead: As a tech",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "tasks of software engineering which is choosing an app name.\n\nHint always give your apps code name and never tie it with the display name of your application in case you need to change in the future due to marketing or legal reasons or if you discover your app name is already taken.😂 For example \"katana\" is the code name for the Facebook app, \"orca\" is the code name of Messenger application.\n\nStep One: building the application Frontend\n\nBecause your \"Super Awesome App\" app is an enhanced version of twitter, you already have a design ready in Mind. You will build a mobile",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.\n\nFull-Stack Engineer: If  you combine front-end and back-end development, you get full-stack development. Full-stack engineers have a wide range of skills in both  user interface design, and technical database configuration.\n\nMobile App Developer: Mobile engineers build software for smartphones, tablets, and other mobile devices. They need to have a solid understanding of Android and iOS,  build responsive apps that work on a range of different devices, and consider technical limitations like memory and processing power.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is also used in radar.\n\nserver is a term for a computer — and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsmart device is a product or machine that can send information",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "application app (ios & android) with very fancy screens for mobile users as well as a super cool web interface for those users who still believe the internet is best enjoyed using a browser. The mobile apps as well as the web interface can be considered your Frontend for the application. you are a very super dedicated developer and you are will use the following technologies to build your applications\n\n    Kotlin : android development\n    Swift : ios development\n    React / Angular / Vue.js / Other : single page web application development\n\nUsing",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "systems respond to them in different non-standard manners. Most approaches work by preventing one of the four Common conditions from occurring, especially the fourth one.[12] Major approaches are as follows.\nIgnoring deadlock\n\nIn this approach, it is assumed that a deadlock will never occur. This is also an application of the Ostrich algorithm.[12][13] This approach was initially used by MINIX and UNIX.[9] This is used when the time intervals between occurrences of deadlocks are large and the data loss incurred each time is tolerable.\n\nIgnoring deadlocks can be safely done if deadlocks are formally proven to never occur. An example is the RTIC",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to find his real life friends)\nFollow / Unfollow (allows user to follow / unfollow other users)\n\n\nWhen you were developing your application you used your personal machine to test. you ran a database engine -let's assume you started simply and are using a relational database engine like MySQL. You also used a local web server to serve the requests (function calls) of your front end using a backend program that you have written in (php or Python).\n\nNow to deploy your backend you need to run these two parts on a machine that can be connected to by your frontend application so",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "resources of that process.\n\nThe final condition is the circular wait condition. Approaches that avoid circular waits include disabling interrupts during critical sections and using a hierarchy to determine a partial ordering of resources. If no obvious hierarchy exists, even the memory address of resources has been used to determine ordering and resources are requested in the increasing order of the enumeration.[4] Dijkstra's solution can also be used.\n\nDeadlock Avoidance\n\nSimilar to deadlock prevention, deadlock avoidance approach ensures that deadlock will not occur in a system. The term \"deadlock avoidance\" appears to be very close to \"deadlock prevention\" in a linguistic context, but",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "modeling technologies, and real-world evidence in healthcare data. Imagine the impact from figuring out how best to get patients into clinical trials, improving drug discovery, and advancing patient outcomes with precision and personalized medicine.”\n\nSo although behavioral analytics can be an issue if an implementation violates privacy norms or compliance regulations, it can also lead to very positive outcomes for consumers and businesses.\nMitigating risks with behavioral analytics\n\nBehavioral analytics is often used for business opportunities, but the techniques are just as applicable to identify and alert on risks. Behavioral analytics is used in banking for fraud detection, embedded in AIops tools to help improve incident management, and helps gaming systems to identify cheaters.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the processes would not be prevented from using the resource when necessary. Only one process can use the resource at any given instant of time.[8]\n\nHold and wait or resource holding: a process is currently holding at least one resource and requesting additional resources which are being held by other processes.\n\nNo preemption: a resource can be released only voluntarily by the process holding it.\n\nCircular wait: each process must be waiting for a resource which is being held by another process, which in turn is waiting for the first process to release the resource. In general, there is a set of waiting",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lead, you’ll be responsible for the entire software development process. You’ll manage a large team of professionals involved in software design and development. You’ll be required to report development progress to company stakeholders and provide input into the decision making process.\n\nTeam Manager: If you have strong leadership skills, you can progress into a managerial-based role. You’ll be responsible for the wellbeing of the entire team and will oversee their career progression.\n\nTechnical Architect: As a technical architect, you’re expected to overlook the entire architecture and technical design. You’ll be required to build processes for the team and provide technical leadership. This",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment where replacement of instances is rapidly possible. Service Level Agreement commitment is 99.9% availability for each Amazon EC2 region. \n\nWorks with Amazon tools: Amazon EC2 works fine with Amazon services like Amazon S3, Amazon RDS, Amazon DynamoDB, and Amazon SQS. It provides a complete solution for computing, query processing, and storage across a wide range of applications. \n\nSecure − Amazon EC2 works in Amazon Virtual Private Cloud to provide a secure and robust network of resources. \n\nFlexible Tools − Amazon EC2 provides the tools for developers and system administrators to build failure applications and isolate themselves from common failure",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "— and especially the software on it — that provides services (hence, the name server) to other computers. A server computer program, for instance, stands ready to fulfill requests by its clients (which are other computer programs). For instance, a web server pulls up website pages or other files upon request. The web browser that you use on your computer to find things on the internet is one type of client. It calls up files from a web server.\n\nsoftware is The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsolution is A liquid in which",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Everything else is done by an automated process. GitOps is like a synchronization of your server configuration for each project managed by git.\n\nModern applications are developed with speed and scale in mind. Organizations with a mature DevOps culture can deploy code to production hundreds of times per day. DevOps teams can do this through best development practices like version control, code reviews, and CI/CD pipelines that automate testing and deployments. That’s GitOps.\n\nBy updating to the application repository, a “pipeline” is executed which starts several automated steps: Tests of the system which execute the program code, Checks for a static analysis",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the CI Server informs the team. Team members read the message to understand where the issue is, fix the problem and integrate the changes back to the remote repository.\nThen we start again from step 1 until the build shows that the changes integrate successfully and tests all pass.\n\nContinuous integration helps engineers reduce risks by giving them feedback about their code. The purpose of Continuous Integration is to help identify and fix any errors faster.\n\nContinuous integration promotes collaboration among team members and more efficient problem-solving. It also improves the process of delivering a project.\n\nContinuous integration requires the team to: Fix all",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "been applied to achieve the upper hand in war, business and biology.\n\ncomputer science is The scientific study of the principles and use of computers.\n\napplication is A particular use or function of something.\n\nbiometrics is group of technologies used to identify people on the basis of measuring biological features that are unique to them. Fingerprints are a prime example of a biometric technology.\n\ncomputer program is a set of instructions that a computer uses to perform some analysis or computation. The writing of these instructions is known as computer programming.\n\ndatabase is An organized collection of related data.\n\ninternet is An electronic communications network. It",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in the Go programming language.[5] Initially, it was a source code management solution to collaborate within a team on software development that evolved to an integrated solution covering the software development life cycle, and then to the whole DevOps life cycle. The current software technology used includes Go, Ruby on Rails, and Vue.js.\n\nIt follows an open-core development model where the core functionality is released under an open-source (MIT) license while the additional functionality such as code owners, multiple issue assignees, dependency scanning and insights are under a proprietary license.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "work on enhancements when needed, Keep teams up to date with the latest project data, Coordinate the installation of new systems and maintain existing ones, Train junior engineers\n\nWhat are the skills needed in software engineering? In order to thrive in a software engineering role, there's a whole spectrum of hard and soft skills you should focus on building. Hard Skills: Your primary function as a software engineer is to build effectives pages, apps and software. So first and foremost, you need some tangible hard skills like the following. Front-end and back-end coding knowledge, Understanding of agile development methodology, How to test and debug your own code, How to write clean code with clear comments. Soft Skills: As you advance in your discipline, you'll find that your job isn't limited strictly to coding. You'll also have to train others, lead teams, and communicate with other departments. So plan to lean on these nifty soft kills, too. An ability to communicate technical information, Time management, Team collaboration. If you manage to excel in a few of these areas, you'll become a key part of any engineering team - and a highly coveted employee.",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the IT companies that pay more than 20000?",
        "answers": [
            "Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies in Sri Lanka that pay more than 50k and above: Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic\n\nIT Companies in Sri Lanka that pay 20k - 50k: Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of information in advance about how resources are to be requested in the future. One of the most used deadlock avoidance algorithm is Banker's algorithm.[17]\n\nLivelock: A livelock is similar to a deadlock, except that the states of the processes involved in the livelock constantly change with regard to one another, none progressing. The term was coined by Edward A. Ashcroft in a 1975 paper in connection with an examination of airline booking systems. Livelock is a special case of resource starvation; the general definition only states that a specific process is not progressing. Livelock is a risk with some algorithms that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the institutions providing degrees in IT or computing in Sri Lanka?",
        "answers": [
            "SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies in Sri Lanka that pay more than 50k and above: Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic\n\nIT Companies in Sri Lanka that pay 20k - 50k: Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "in Sri Lanka that pay more than 50k and above: Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic\n\nIT Companies in Sri Lanka that pay 20k - 50k: Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance.\n\nHow to become a Software Engineer? SEEK Learning\nTo become a Software Engineer in Australia, you usually need an undergraduate qualification in IT such as a degree in software engineering or computer science. Complete a relevant bachelor degree, such as a Bachelor of Computer Science or Bachelor of Software Engineering. Alternatively, a bootcamp or intensive short course can introduce you to the fundamentals. Degrees accredited by the Australian Computer Society",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "is a slang term for the internet.\n\nalgorithm is a set of instructions written for the computer in coded language that tells the computer what to do.\n\nartificial intelligence is A branch of science that studies how to make machines think like humans. Also known as AI.\n\nbytes is a basic unit of stored information capable of designating a single character, such as a letter or number.\n\ndatabase is An organized collection of information stored in a computer.\n\nmemory in computing is the information stored in electronic form, or the total information-holding capacity of an electronic device or computer.\n\noperation in computing, an elementary task, such",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In order to understand how the the concept of cloud [unlimited computing resourcing] works, we need to understand the concepts of scalability. In other words how does computing resources scale ?\n\nLet's consider the basic simple web application software architecture that described before. In this architecture we have customers using a front end client application to send requests to your backend software, the backend software process these requests and returns output to be displayed by the front end application.\n\nWhat is scalability?: The scalability of an application / system can be measured by the load / number of requests it can effectively handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "computing) Things that are performed in or through digital processing and/or the internet. For instance, a virtual conference may be where people attended by watching it over the internet.\n\nmachine learning is a technique in computer science that allows computers to learn from examples or experience. Machine learning is the basis of some forms of artificial intelligence (AI).\n\nstatistics is the practice or science of collecting and analyzing numerical data in large quantities and interpreting their meaning. Much of this work involves reducing errors that might be attributable to random variation. A professional who works in this field is called a statistician.\n\napp:",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "So you have developed your backend for your application that you want to serve multiple users. Users will send you requests using their front end applications that are either installed on their mobile phones or that is living in their browsers and your backend is expected to take this input, process it and produce useful outputs for the users.\n\nYou need a place for your backend to live in a place with a fixed access where it users will be able to access it. you also need computing resources (memory, storage etc..) to be able to serve the customer requests. you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "system (DBMS) is an integrated set of software that facilitates database management, including the storage, organization, and retrieval of large volumes of data. \n\nDatabase management systems have become more relevant as the use of data in businesses continues to expand, providing organizations with the following benefits: Obtaining meaningful insights from the data, Organizing the data of customers, clients, inventory, products, and employees efficiently, Allowing data storage in different types of data models such as tables, graphs, documents, and so on, Facilitating query performance and enabling the generation of new data sets based on the business requirements, Automating processes such as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "cloud: (in computing) A network of computers (hardware), known as servers, which are connected to the internet. They can be used to store data and computer programs (software) that can be accessed by one or many people at once, and from anywhere in the world.\n\ncloud computing: Computing services that store data and access programs on computers known as servers that are connected to the internet. This allows computers, even potentially distant ones, to store files and perform work. They become the “cloud.” And their use frees up space in the local computer on which someone works. Files and programs on the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "can interact with its environment and other characters.\n\ncomputer science: The scientific study of the principles and use of computers. Scientists who work in this field are known as computer scientists.\n\ndeep learning: (in computing) A type of machine learning that uses artificial neural networks to detect patterns in large data sets. Deep learning has made it much easier for computers and robots to figure out words in speech, identify faces, label pictures and more.\n\npandemic: An epidemic that affects a large proportion of the population across a country or the world.\n\npopulation: (in biology) A group of individuals from the same species that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "number of requests simultaneously before reaching its limits.\n\nWhen we want to scale the system past its current limits there is two ways to do so: Vertical Scaling and Horizontal Scaling. Both methods are similar in that they both involve adding computing resources to your infrastructure. There are distinct differences between the two in terms of implementation and performance.\nDifference between Vertical Scaling and Horizontal Scaling ?\n\nVertical scaling means scaling by adding more power (e.g. CPU, RAM) to an existing machine (also described as “scaling up”). By adding more power you allow the same machine to serve more customer requests as it now has more computing resources",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "What is Amazon EC2 Instance?: An Amazon EC2 instance is a virtual server in Amazon’s Elastic Compute Cloud (EC2) for running applications on the Amazon Web Services (AWS) infrastructure.EC2 is a service that enables business subscribers to run application programs in the computing environment. In short, you can create a server on AWS and deploy your application on that server. Amazon provides various types of instances with different configurations of CPU, memory, storage, and networking resources to suit user needs.\n\nFeatures of Amazon EC2 Instance: Reliable, Works with Amazon tools, Secure, Flexible Tools, Inexpensive\n\nReliable − Amazon EC2 offers a highly reliable",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "lives in the same area.\n\nsoftware: The mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\ntechnology: The application of scientific knowledge for practical purposes, especially in industry — or the devices, processes and systems that result from those efforts.\n\nvirtual: Being almost like something. An object or concept that is virtually real would be almost true or real — but not quite. The term often is used to refer to something that has been modeled — by or accomplished by — a computer using numbers, not by using real-world parts. (in computing) Things that are performed in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "The general idea of networks was initially patterned loosely on the way nerve cells work in the brain to process signals that lead to thought and learning.\n\nbrowser (in computing) The software program or application that someone uses to find and retrieve information from web pages on the internet.\n\ncode (in computing) is To use special language to write or revise a program that makes a computer do something.\n\ncoding is slang term for developing computer programming — or software — that performs a particular, desired computational task.\n\ncomputer program is A set of instructions that a computer uses to perform some analysis or",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Consistency or Availability in the case of a network partition.\n\nTherefore, the theorem can really be stated as: In the presence of a network partition, a distributed system must choose either Consistency or Availability.\n\nPACELC Theorem: One place where the CAP theorem is silent is what happens when there is no network partition? What choices does a distributed system have when there is no partition?\n\nThe PACELC theorem states that in a system that replicates data:\nif there is a partition ‘P’, a distributed system can choose between availability and consistency ('A' and 'C'); else ('E'), when the system is running normally without partitions,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the online IT courses available?",
        "answers": [
            "Udemy online courses, Coursera, FreeCodeCamp, Codeacademy"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies in Sri Lanka that pay more than 50k and above: Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic\n\nIT Companies in Sri Lanka that pay 20k - 50k: Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "gather and present data, then identify insights, SQL for querying, Machine learning with supervised and unsupervised models\n\naction verbs used in resume to make impact are Automated, Built, Coded, Computed, Constructed, Converted, Debugged, Deployed, Installed, Mechanized, Operated, Programmed, Troubleshot, Upgraded, Uploaded\n\nWhat's it like to be a Software Engineer? Software Engineers design, develop and maintain software systems. The complexity and size of these systems can range from small scale desktop applications to vast international online platforms.\n\nWhat are the tasks and duties of a software engineer? Consult with management and users to determine the needs of the system, Use techniques such as sampling, model building and structured analysis, along with accounting principles, to ensure the solution is efficient, cost-effective and financially feasible, Oversee implementation, coordinate tests and observe initiation of the system to validate performance",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to consider. These include: Flexibility, Redundancy, Geographical Distribution, Performance, Cost\n\nFlexibility\nIf your system is solely designed for scaling up, you are locked into the price set by the hardware you are using. The problem here is sometimes you get limited by the available technology in the market. At a certain point there will be no machine on the market that can satisfy your vertical scaling needs.\n\nOn the other hand if you go with horizontal scaling, it is very easy to add machines of the same specifications, even of lower specification to you system to add computing power.\n\nRedundancy\nIf you have a single",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "A cloud database runs on a cloud computing platform that delivers it to users as a service. \n\nCloud services offer various cloud databases, including SQL and NoSQL databases. \n\nHere are the two main cloud database deployment models: Use a virtual machine (VM) to run your databases on the cloud privately, Purchase access to a database service maintained by a cloud provider \n\nThe main advantage of cloud database services is that the vendor provides and maintains high availability and scalability for the database while making the underlying software stack transparent to users.\n\nSave your seat for this live online training and accelerate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "It is the largest source code host as of November 2021.\n\nDevelopment of the GitHub.com platform began on October 19, 2007. The site was launched in April 2008 by Tom Preston-Werner, Chris Wanstrath, P. J. Hyett and Scott Chacon after it had been made available for a few months prior as a beta release. GitHub has an annual keynote called GitHub Universe.\n\nAcquisition by Microsoft\n\nFrom 2012, Microsoft became a significant user of GitHub, using it to host open-source projects and development tools such as .NET Core, Chakra Core, MSBuild, PowerShell, PowerToys, Visual Studio Code, Windows Calculator, Windows Terminal and the bulk of",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "handle simultaneously. The point at which an application can no longer handle additional requests effectively is the limit of its scalability.\n\nAny type of processing involves consuming computing power one way or another, One application might be doing heavy calculations that use CPU. Another application might need to do graphical processing on the GPU (Graphical Processing Unit). Another application might be IO intensive (requires transferring huge chunks of data between client and backend). In the end due to physical properties of a backend machine (Available RAM, Number of CPU cores, Available GPU power), The backend server can only handle a certain",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "in a backward compatible way, PATCH version is when you make backward-compatible bug fixes.\n\nAdditional pre-release and build metadata designations are available as extensions to the MAJOR.MINOR.PATCH format.(Ex. v1.0.1+3 — version: 1.0.1 with build number 3)\n\nHow is a new version determined?: When using GitHubFlow — guides.github.com/introduction/flow there is a “master / main” branch to which all “feature” branches are merged. If a new version is to be built and released at a certain point in time, a “git tag” is used with the version. Then the pipeline recognises this tag and performs the necessary steps for the release.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "botnet is a Term for robot network, a cluster of computers that have become infected with the same malicious computer program. These infected computers can now act as a community to do harm at the master computer’s command.\n\nbotmaster is a Term for a computer (or the person who runs it) that can control a network of computers that it has infected with some malicious computer program. That malicious program can turn the now-enslaved computers into zombies.\n\ncyber is A prefix that refers to computers or to a type of system in which computerized or online communication occurs.\n\nintelligence is The ability to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "and stereotyping.”\nUseful techniques and technologies\n\nBehavioral analytics is a set of operations, data, and technology practices targeted at specific business opportunities or aimed to mitigate a set of quantifiable risks. There are many ways organizations can implement behavior analytics. The list below is a subset of the available solutions.\n\n    Platforms such as content management, e-commerce, and digital experience often include capabilities to support behavioral analytics.\n    Customer data platforms centralize data on customers and their actions while providing integrations to perform actions on marketing automation platforms, advertising systems, e-commerce, and other platforms.\n    Product",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are internationally recognised and may offer future opportunities for certification and upskilling. Undertake an internship while studying. This will provide you with valuable work experience and can lead to employment opportunities after you graduate. Consider developing your skills and experience with side projects, workshops and hackathons. When applying for jobs, it helps to have a portfolio of work to showcase your skills.\n\nWhat are the skills and experience employers are looking for software engineers? Java Programming, JavaScript Programming, AWS, C++ Programming, C# Programming, Python Programming, Node.JS, Typescript Programming, Computer Science, Angular\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "In distributed systems, failures will occur, e.g., servers can crash, disks can go bad resulting in data losses, or network connection can be lost, making a part of the system inaccessible. How can a distributed system model itself to get the maximum benefits out of different resources available?\n\nCAP Theorem\n\nCAP theorem states that it is impossible for a distributed system to simultaneously provide all three of the following desirable properties:\nConsistency (C), Availability (A), Partition tolerance (P)\n\nConsistency (C): All nodes in the system see the same data at the same time. This means users can read or write from/to any node in",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "jobs at the next tier and finding out what skills are in demand. Once you have an understanding of what skills are required, it’s time to start planning your learning.\n\nroadmap.sh provides a great roadmaps on various software development branches and can be a excellent place to get started. I would use this site and cross-reference against actual jobs posts. Use multiple sources to help you decide what skills you wish to gain.\n\nOnce you have an idea as to what skills to learn, it’s time to start planning your time. I recommend planning a year in advance. Your plan should include:\n\n    The skills you wish to learn\n    Dates by which you would have learnt a certain skill\n    The time needed to consolidate knowledge (e.g: side projects that require that a new skill)",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "This understanding would add yet another tool to your problem-solving toolbelt.\n\nOf course, reading code written by other developers is not the only way to learn from others. Often, we learn when others review our code.\n\nSometimes it can be frustrating when some code we’ve submitted is rejected. It is important to keep an open-mind and allow yourself the opportunity to explore why your code was rejected. Generally, there are two reasons why code may be rejected: either your code does need refinement, or it was not clear to the reviewer what your code is doing. If your code does indeed need",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that your users can start making use of your application. You now need a Server.\n\nWhat is a Server?: A server in the most basic sense is a machine connected on the internet where your processing can happen. This means that this machine must be running and connect 24/7. you need this machine to be the host of your program. This is where term hosting come into place. It also means this machine need to have an address so that anyone is able to find it. the machine needs an IP\n\nWhat is a IP?: IP address is a unique address that",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "able to take something from this in your journey to become a Mid-Level Developer.\n\n1. Plan Ahead: Software development is a vast topic with many branches of development. It is an area filled with rabbit holes and it is easy to fall into the trap of continuously learning without a clear and specific goal in sight. One of the first things you should do is plan ahead.\nOnce you have an idea of what kind of software development career you wish you pursue, it’s important to research what skills you would need to get to the next level. This can involve researching",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "training, funding, and additional resources to run events and grow their communities. To become a Campus Expert applicants must complete an online training course consisting of multiple modules designed to grow community leadership skills. \n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "COVID-19 pandemic, which accelerated the popularity of online shopping and remote working, further led businesses to embrace database management systems. It also paved the way for the increased use of cloud database management systems over on-premises, with the automation of cloud databases attracting businesses to invest in them. Indeed, the total revenue from the DBMS market was $65 billion in 2020; of that, cloud DBMS accounted for $26 billion.\nThe Future of Database Management Systems\n\nThe DBMS trends we can expect to see more of in the future?: Cloud migration, Increased data security, Open-source cloud, Graph in popular demand\nCloud migration: According to",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "collect and apply knowledge and skills.\n\ninternet is An electronic communications network. It allows computers anywhere in the world to link into other networks to find information, download files and share data (including pictures).\n\nInternet of Things is The network of physical objects that have been equipped with electronic devices to let them gather and share information. This allows these objects to observe and interact with their environment.\n\nlink is a connection between two people or things.\n\nmalware is Computer programs meant to disrupt the normal operation of a device. It is loaded onto computers without their owners’ permission. Examples include computer “viruses” and spyware. Some programs may cause a computer to crash. Others may allow spies to view — and possibly control — a computer user’s online activities. Some malware can even steal personal information.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "excel in them. We'll also offer up some pro tips on how to advance your career, or switch to software engineering from a totally different industry. \n\nAvailable software engineering job titles are Front-End Engineers, Back-End Engineers, Full-Stack Engineer, Mobile App Developer, Graphics Engineer, Game Engineer, Data Engineer, DevOps Engineer, SDET (Software Development Engineer in Test), Embedded Systems Engineer, Security Engineer\n\nFront-End Engineers: A front-end engineer focuses on building the user interface for a website or application. They’re responsible for the look and feel of a website and handle anything a user can interact with.\n    \nBack-End Engineers: These professionals work on the server-side of web applications. This includes web services, database design, and integrating data feeds. Shopping cart functionality or a secure payment system are examples of back-end development.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "version can be restored, and provides full transparency to the entire team (who “committed” what changes at what time).\n\nInfrastructure as Code\nDeclarative description of the system and the infrastructure (no instructions but facts ready for direct execution)\nIn many outdated systems, the know-how about the servers is either kept by the formerly so-called “system administrators” or there are long documentations about the dependencies and instructions for the servers (such documentations are not always up to date and therefore bring little added value). With GitOps this old concept becomes obsolete. With the new concept we want to keep the know-how as transparent as",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Continuous Integration is one of the top technical terms that a software engineer should know.\n\nWHAT IS CONTINUOUS INTEGRATION?\n\nLet's take the following scenario:\n\nWe have three software engineers in a medium-sized company, all working and contributing towards one big project, each implementing different features. They initially work on a local branch and commit their changes at least daily.\n\nWhat happens when they push their code?\n\nHere is where Continuous Integration comes into play.\n\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run. \n\nBefore you push your changes",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "for general use when you don’t want a testing environment, but want an all-purpose instance. They offer more balanced resources compared to the “T” instance\n\nCompute Optimized: If your application requires the process of a lot of information like math operations, load balancing, rendering tasks, or sometimes video encoding. You need an instance that can process all that information in less time\n\nMemory Optimized: If your app doesn’t require too much CPU, but instead, needs more and faster RAM; you should check out the available option on the “X1e, X1, and R” instances.\n\nAccelerated Computing: Creating a movie and need to render the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    },
    {
        "question": "What are the IT companies that pay more than 50000 for interns?",
        "answers": [
            "Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic"
        ],
        "positive_ctxs": [
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies in Sri Lanka that pay more than 50k and above: Surge Global, Swivel Group, H2O.ai, Atlas Labs, PMsquare Sri Lanka, Ascentic\n\nIT Companies in Sri Lanka that pay 20k - 50k: Codification, CreativeSoftware, Sysco LABS, MyBudget, Appspotr, WSO2, Fortude, VitalHub, Innovations Lab, Rootcode Labs, CAKE Technologies, Random Software Ltd, ADA, MoodforCode, Adage Digital, Sana Commerce Sri Lanka, VEZOLVE, Vetstoria, Eyepax, :Different Sri Lanka, Data Capture Experts Pty Ltd, Kainovation Technologies, INVORG, JRC Software, Stax Colombo, Meu Labs Sri Lanka, Calcey Technologies, TWC Innovations, Elysian Crest, CodeGen International\n",
                "passage_id": ""
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "",
                "text": "of a dedicated server. These plans vary in price and offer affordable scaling, better performance, and better security than shared hosting.\nDedicated Hosting\n\nDedicated Servers are precisely what the name implies: a single server dedicated to you. All the hardware that makes up the server is under your control. Bare metal servers often share network access with neighbouring dedicated servers in a data center, but they share no hardware. These hosting plans tend to be more expensive than shared or VPS but can give you better performance, security, and flexibility, especially for those requiring custom configurations or specific hardware.\n\nWith dedicated hosting, you",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud\nWhat is Cloud computing\n\nCloud computing in a nutshell is the delivery of the computing power as a service , like electricity or water , you don't need to worry about the hardware behind it ( Nuclear power station - solar power station) You only pay for ( and benefit ) from the service that is delivered to you..",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. \n\nDatabases as a service (DBaaS) is a cloud computing service in which a cloud provider offers a comprehensive level of database management features, including operational, maintenance, administrative, and more, based on a fee-based subscription model. It allows users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "describes the ability of certain devices to send and receive radio signals over the air. It often refers to Wi-Fi networks and the networks operated by cell-phone companies to transmit data called up by phone users.\n\nalgorithm is a group of rules or procedures for solving a problem in a series of steps. Algorithms are used in mathematics and in computer programs for figuring out solutions.\n\ngame theory is a field of mathematics that focuses on finding strategies for dealing with competitive situations where the outcome of a participant’s choice of action depends on the actions of other participants. Game theory has",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "As the amount of data generated globally grows exponentially, data-driven businesses are increasingly turning to more innovative database management systems to store, manage, and process all that data. This article provides an overview of database management, how it has evolved – especially during the COVID-19 pandemic – and the future of database management systems. \n\nWhat Is a Database?\n\nBefore learning more about database management systems, it’s essential to understand what a database is and how various kinds of databases are used.\n\nA database is a collection of structured data stored in a computer system that can be easily accessed and managed by users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "of limited resources for your type of application, Scalable , you should be able to scale up and down the resources that you have access to easily and fast, Pay as you go , you only pay for the resources that you use.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "interviews.\n\nTo help yourself get into the Mid-Level Software Developer midset, rather than thinking about how to make something work, I encourage you to think about performance. Once you have written some code, ask yourself the following questions: What’s the time and space complexity of what I’ve just written?, Is this scalable?, Is there any way I can make the code more performant?\n\nAs a Junior Developer, you may be used to worrying about how to make something work. As a Mid-Level Developer, you need to also start asking yourself, if the code works well and if it is scalable.\n\n4. Learn from",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "To become a software engineer in Sri Lanka: For software engineering, that education comes from coursework and degrees. The course type that you would have for such a degree includes math, computer literacy, engineering, and a variety of other areas relevant to computer work, programming languages, and software. \n\nComputing and information Technology courses offered by SLIIT, NIBM, NSBM Green Campus, APIIT, Informatics, IDM, ESOFT and many other Private Institutes. Bachelor of Information Technology BIT External degree from UCSC. BIT External Degree from University of Moratuwa\n\nOnline Courses that are available for students in software engineering: Udemy online courses, Coursera, FreeCodeCamp, Codeacademy\n\nCompanies",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "problems and avoid checking in broken code, Ensure enough tests cover happy and unhappy paths and that they're all passing, Avoid checking in code when the build fails, Be more responsible and accountable for their code.\n\nWHAT HAPPENS WHEN THE BUILD IS SUCCESSFUL?\nIf the build is successful, the code can be released to production (meaning that the changes will be released to the end-users). The practice of moving code to production is known as Continuous Delivery.\n\nWHAT ARE THE BENEFITS OF CONTINUOUS INTEGRATION?: It's easier to detect and address bugs, Reduce merge conflicts, You can release software more frequently, Better code quality,",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "open-source cloud database management systems because they are reluctant to pay license costs. However, they are willing to pay for the services and support. Open-source cloud systems also provide a portable front-end API. \nGraph in popular demand: Graph database management systems can perform graph database tasks, including storage, processing, and analytics of graph datasets. Today, many businesses prefer a natural way to represent their connected data, making graph a popular technology for industries of all kinds.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "situations. \n\nInexpensive − Amazon EC2 wants us to pay only for the resources that we use. It includes multiple purchase plans such as On-Demand Instances, Reserved Instances, Spot Instances, etc. which we can choose as per our requirement.\n\nEC2 Instance Types: General Purpose EC2 Instance, Compute Optimized, Memory Optimized, Accelerated Computing, Storage Optimized\n\nGeneral Purpose EC2 Instance: This type of instance is the most commonly utilized for testing. There are two types of general-purpose instances: “T” and “M.”. “T” instances are targeted to simple jobs just like testing environments, and they have modest networking on the most basic options. “M” Instances are",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "to and retrieve information from the internet, or that can be controlled via the internet, such as by using an app on a smartphone.\n\nsmartphone is a cell (or mobile) phone that can perform a host of functions, including search for information on the internet.\n\nsoftware is the mathematical instructions that direct a computer’s hardware, including its processor, to perform certain operations.\n\nsophisticated is a term for something that is advanced, complex and/or elegant.\n\ntwitter is An online social network that allows users to post messages (called tweets) containing no more than 140 characters.\n\nWeb in computing is An abbreviation of World Wide Web, it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "GitHub, Inc. is a provider of Internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It provides access control and several collaboration features such as bug tracking, feature requests, task management, continuous integration, and wikis for every project. Headquartered in California, it has been a subsidiary of Microsoft since 2018.\n\nIt is commonly used to host open-source projects. As of June 2022, GitHub reports having over 83 million developers and more than 200 million repositories (including at least 28 million public repositories).",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that detect and recover from deadlock. If more than one process takes action, the deadlock detection algorithm can be repeatedly triggered. This can be avoided by ensuring that only one process (chosen arbitrarily or by priority) takes action.[21]\n\nDistributed deadlock\n\nDistributed deadlocks can occur in distributed systems when distributed transactions or concurrency control is being used.\n\nDistributed deadlocks can be detected either by constructing a global wait-for graph from local wait-for graphs at a deadlock detector or by a distributed algorithm like edge chasing.\n\nPhantom deadlocks are deadlocks that are falsely detected in a distributed system due to system internal delays but do not",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "environment.\n\nmarketing is the strategy for getting people to adopt a new policy or buy new products. In many cases, the marketing may rely on advertising or getting celebrities and other trendsetters to endorse a policy or product.\n\nnetwork is a group of interconnected people or things.\n\nonline is a term that refers to things that can be found or done on the internet.\n\nradio waves is Waves in a part of the electromagnetic spectrum; they are a type that people now use for long-distance communication. Longer than the waves of visible light, radio waves are used to transmit radio and television signals; it",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users to choose a “pay-as-you-go” service in the areas of scaling, provisioning, availability, and security. \n\nOpen-source databases are free database applications that allow users to store, view, download, modify, and reuse data based on their unique business requirements. The users can download the source code, customize it, and distribute it without any vendor restrictions.\n\nGraph databases store data as nodes and edges, and they represent entities and relationships, respectively. There are mainly two models of graph databases: property graphs and RDF graphs. The former focuses on data analytics, and the latter on data integration.\n\nThe Importance of Database Management Systems\n\nA database management",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "are using “should” have all the answers you require for any problem. Consulting documentation when you have a certain problem can also be faster than finding a YouTube video that addresses a similar problem.\n\nThat said, not all documentation is good, and not all documentation has all the answers. In such cases, I would encourage having an attempt at reading some source code. This might be a tricky process, but will help you get familiar with more complex code. This might also help understand the package at a deeper level and help solve other problems in the future. This does not of course eliminate the value of tools Google and Stack Overflow. Both are great tools and you should be able to use both effectively. However, reading documentation and source code are still invaluable skills.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "own the machine and you are responsible for anything in it. You need to install an operating system. You need to setup dependencies that you need for your backend application and you need to make sure these are updated.\nServerless Hosting\n\nIn this model you don't need to worry about the infrastructure needed to run you application, you host is responsible of running it and allocating resources so that it is able to serve the customers that it needs. in this model if your application becomes popular and start receiving more and more traffic you don't need to worry if the machine you run on has 2gb or 4gb of ram. you don't worry about moving your application to a stronger machine. because all of this is abstracted away from you. When you are consuming computing power without worrying about underlying hardware you are now a user of the Cloud",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "process remains indefinitely unable to change its state because resources requested by it are being used by another process that itself is waiting, then the system is said to be in a deadlock.[4]\n\nIn a communications system, deadlocks occur mainly due to loss or corruption of signals rather than contention for resources.[5]\nTwo processes competing for two resources in opposite order.\n\n    A single process goes through.\n    The later process has to wait.\n    A deadlock occurs when the first process locks the first resource at the same time as the second process locks the",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "that is delivered to you..\n\nIn the computer world , the service delivered to you is the computing power (storage - processing etc ).\n\nIn the cloud model you only care about and pay for resources you consume\n\nGartner Inc. one of the world's leading information technology research and advisory company. defines cloud computing as Scalable, IT-related capabilities provided as a service on the Internet.\n\nMr. Schmidt is considered by many to be the first user of the term cloud computing in the context of its embodiment in 2008 and later, but the term didn’t reach the threshold for inclusion in Google’s Trends service",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "until about September 2007\n\nMr. Schmidt makes the assumption in the preceding quotation that data services provided by the cloud-computing servers were defined by the organisations that owned the servers, specifically Google, Yahoo!, eBay, and Amazon.\n\nWorldwide traffic for the terms cloud computing, Windows Azure, Amazon EC2, and Google App Engine for the years 2000 through 2008 as reported by the Google Trends service.\nThe Rules of the cloud\n\nrules that define cloud: Have infinite resources, Scalable, Pay as you go\n\nthese are 3 rules that define the cloud , A cloud must Have infinite resources , that is you should never have a problem",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "Usually, HTML it's the most popular format.\n\n#3. WHAT DOES HTTP MEAN?\n\nHTTP stands for HyperText Transfer Protocol, HTTP is a stateless Request-Response Protocol, A stateless protocol does not require the webserver to retain information or status about each user for the duration of multiple requests. [WikiPedia].\n\nWhat are the advantages of using HTTP? Each request is independent of the previous requests, It reduces data transfer because the server doesn't need to track the state of multiple requests, The server can scale to many clients, It prevents network failure: in case of a network issue, the state of the request is not lost.\n\nHow",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "behavior.\n\ndatabase: An organized collection of related data.\n\nengineer: A person who uses science to solve problems. As a verb, to engineer means to design a device, material or process that will solve some problem or unmet need. (v.) To perform these tasks, or the name for a person who performs such tasks.\n\nevolution: (v. to evolve) A process by which species undergo changes over time, usually through genetic variation and natural selection. These changes usually result in a new type of organism better suited for its environment than the earlier type. The newer type is not necessarily more “advanced,” just better adapted",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "users. The database keeps data mainly in the form of tables, views, schemas, etc., which allows users to handle the data more efficiently and effectively. \n\nThere are several types of databases suitable for businesses of all sizes: \nRelational databases: organize data into tables with rows and columns. Each row can be identified with a unique key, or “record.” Columns in the relational database are called “attributes.” In most relational databases, the table represents an entity, rows indicate the instances of that specific entity, and columns mention the values attributed to that instance. \nNon-relational (or NoSQL) databases: store data in different forms, including documents, graphs, wide columns, and key-value stores, rather than tables as in the relational databases. NoSQL databases are flexible and scalable enough to store and process a vast amount of data. \nCloud databases: allow users to access and manage a database in a cloud environment, with the additional benefits of cloud computing. This can be private, public, or a hybrid cloud. ",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "the cloud can be accessed instantly from anywhere. Those files and programs also can be shared with many people at once.\n\ndata center: A facility that holds computing hardware, such as servers, routers, switches and firewalls. It also will house equipment to support that hardware, including air conditioning and backup power supplies. Such a center ranges in size from part of a room to one or more dedicated buildings. These centers can house what it takes to make a “cloud” that makes possible cloud computing.\n\ndata compression: A reduction in the size of a file or other form of digital data.\n\n5G: The 5 gigahertz frequency band used to transmit a newer generation of signals to cellular (phone) networks",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "one chemical has been dissolved into another.\n\nsurveillance is A term for watching or keeping track of the behavior of others, usually in a stealthy manner or from a distance.\n\nTwitter is An online social network that allows users to post messages containing no more than 280 characters (until November 2017, the limit had been just 140 characters).\n\nvirtual computing is Calculations or analyses performed by a network of linked computers that can together simulate at least some of the activities of a supercomputer. To do this, individuals voluntarily turn over control of their computers during off hours to work on some designated task.",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "responses doesn't need to travel large distances.\n\nPerformance\nScaling out allows you to combine the power of multiple machines into a single virtual system with the combined power of all of them. This means you’re not limited to the capacity of a single unit.\n\nCost\nIt is no surprise that top of the line machines that enters the market are exponentially expensive as their specs increase. if you do the math you will find that it is cheaper to have the same computing power from multiple machines rather than from a single top of the line machine.\n\nConclusion\nIt’s likely that the industry will increasingly migrate",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "identifies a device on the internet or a local network. IP stands for \"Internet Protocol,\".\n\nSo you go online, search for for hosting providers and you find tons and tons of them out there. there are providing range of services. Some of the services are very cheap (couple of dollars a month). but there are others that are more and more expensive.\n",
                "passage_id": ""
            },
            {
                "title": "",
                "text": "science and analytics products at Teradata, explains the underlying data science. “Behavioral analytics leverages customer data about who they are (demographics), what they are doing (events), and who they interact with (connections) to derive better insights, predictions, and actions. The process consists of segmentation, predictive modeling, and prescriptive action.”\n\nToborg suggests that behavioral analytics shares many of the same opportunities data science targets but also faces challenges in developing and supporting machine learning models. He continues, “When properly implemented, behavioral analytics results in better customer experiences, more precise targeted marketing, and greater engagement. However, there are challenges, including privacy, model bias,",
                "passage_id": ""
            }
        ]
    }
]